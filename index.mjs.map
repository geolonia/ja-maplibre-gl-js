{"version":3,"file":"index.mjs","sources":["../../node_modules/json-stringify-pretty-compact/index.js","../../rollup/build/tsc/src/style-spec/format.js","../../node_modules/url/node_modules/punycode/punycode.js","../../node_modules/url/util.js","../../node_modules/querystring/decode.js","../../node_modules/querystring/encode.js","../../node_modules/querystring/index.js","../../node_modules/url/url.js","../../rollup/build/tsc/src/style-spec/visit.js","../../rollup/build/tsc/src/style-spec/migrate/v8.js","../../rollup/build/tsc/src/style-spec/util/extend.js","../../rollup/build/tsc/src/style-spec/expression/parsing_error.js","../../rollup/build/tsc/src/style-spec/expression/scope.js","../../rollup/build/tsc/src/style-spec/expression/types.js","../../node_modules/csscolorparser/csscolorparser.js","../../rollup/build/tsc/src/style-spec/util/color.js","../../rollup/build/tsc/src/style-spec/expression/types/collator.js","../../rollup/build/tsc/src/style-spec/expression/types/formatted.js","../../rollup/build/tsc/src/style-spec/expression/types/resolved_image.js","../../rollup/build/tsc/src/style-spec/expression/values.js","../../rollup/build/tsc/src/style-spec/expression/definitions/literal.js","../../rollup/build/tsc/src/style-spec/expression/runtime_error.js","../../rollup/build/tsc/src/style-spec/expression/definitions/assertion.js","../../rollup/build/tsc/src/style-spec/expression/definitions/format.js","../../rollup/build/tsc/src/style-spec/expression/definitions/image.js","../../rollup/build/tsc/src/style-spec/expression/definitions/coercion.js","../../rollup/build/tsc/src/style-spec/expression/evaluation_context.js","../../rollup/build/tsc/src/style-spec/expression/compound_expression.js","../../rollup/build/tsc/src/style-spec/expression/definitions/collator.js","../../rollup/build/tsc/src/style-spec/expression/definitions/within.js","../../rollup/build/tsc/src/style-spec/expression/is_constant.js","../../rollup/build/tsc/src/style-spec/expression/definitions/var.js","../../rollup/build/tsc/src/style-spec/expression/parsing_context.js","../../rollup/build/tsc/src/style-spec/expression/stops.js","../../rollup/build/tsc/src/style-spec/expression/definitions/step.js","../../node_modules/@mapbox/unitbezier/index.js","../../rollup/build/tsc/src/style-spec/util/interpolate.js","../../rollup/build/tsc/src/style-spec/util/color_spaces.js","../../rollup/build/tsc/src/style-spec/expression/definitions/interpolate.js","../../rollup/build/tsc/src/style-spec/expression/definitions/coalesce.js","../../rollup/build/tsc/src/style-spec/expression/definitions/let.js","../../rollup/build/tsc/src/style-spec/expression/definitions/at.js","../../rollup/build/tsc/src/style-spec/expression/definitions/in.js","../../rollup/build/tsc/src/style-spec/expression/definitions/index_of.js","../../rollup/build/tsc/src/style-spec/expression/definitions/match.js","../../rollup/build/tsc/src/style-spec/expression/definitions/case.js","../../rollup/build/tsc/src/style-spec/expression/definitions/slice.js","../../rollup/build/tsc/src/style-spec/expression/definitions/comparison.js","../../rollup/build/tsc/src/style-spec/expression/definitions/number_format.js","../../rollup/build/tsc/src/style-spec/expression/definitions/length.js","../../rollup/build/tsc/src/style-spec/expression/definitions/index.js","../../rollup/build/tsc/src/style-spec/util/result.js","../../rollup/build/tsc/src/style-spec/util/properties.js","../../rollup/build/tsc/src/style-spec/util/get_type.js","../../rollup/build/tsc/src/style-spec/function/index.js","../../rollup/build/tsc/src/style-spec/expression/index.js","../../rollup/build/tsc/src/style-spec/function/convert.js","../../rollup/build/tsc/src/style-spec/feature_filter/index.js","../../rollup/build/tsc/src/style-spec/feature_filter/convert.js","../../rollup/build/tsc/src/style-spec/migrate/expressions.js","../../rollup/build/tsc/src/style-spec/migrate.js","../../rollup/build/tsc/src/style-spec/composite.js","../../rollup/build/tsc/src/style-spec/util/ref_properties.js","../../rollup/build/tsc/src/style-spec/deref.js","../../rollup/build/tsc/src/style-spec/util/deep_equal.js","../../rollup/build/tsc/src/style-spec/diff.js","../../rollup/build/tsc/src/style-spec/error/validation_error.js","../../rollup/build/tsc/src/style-spec/error/parsing_error.js","../../rollup/build/tsc/src/style-spec/validate/validate_constants.js","../../rollup/build/tsc/src/style-spec/util/unbundle_jsonlint.js","../../rollup/build/tsc/src/style-spec/validate/validate_object.js","../../rollup/build/tsc/src/style-spec/validate/validate_array.js","../../rollup/build/tsc/src/style-spec/validate/validate_number.js","../../rollup/build/tsc/src/style-spec/validate/validate_function.js","../../rollup/build/tsc/src/style-spec/validate/validate_expression.js","../../rollup/build/tsc/src/style-spec/validate/validate_boolean.js","../../rollup/build/tsc/src/style-spec/validate/validate_color.js","../../rollup/build/tsc/src/style-spec/validate/validate_enum.js","../../rollup/build/tsc/src/style-spec/validate/validate_filter.js","../../rollup/build/tsc/src/style-spec/validate/validate_property.js","../../rollup/build/tsc/src/style-spec/validate/validate_paint_property.js","../../rollup/build/tsc/src/style-spec/validate/validate_layout_property.js","../../rollup/build/tsc/src/style-spec/validate/validate_layer.js","../../rollup/build/tsc/src/style-spec/validate/validate_string.js","../../rollup/build/tsc/src/style-spec/validate/validate_source.js","../../rollup/build/tsc/src/style-spec/validate/validate_light.js","../../rollup/build/tsc/src/style-spec/validate/validate_formatted.js","../../rollup/build/tsc/src/style-spec/validate/validate_image.js","../../rollup/build/tsc/src/style-spec/validate/validate.js","../../rollup/build/tsc/src/style-spec/validate/validate_glyphs_url.js","../../rollup/build/tsc/src/style-spec/validate_style.min.js","../../node_modules/@mapbox/jsonlint-lines-primitives/lib/jsonlint.js","../../rollup/build/tsc/src/style-spec/read_style.js","../../rollup/build/tsc/src/style-spec/validate_style.js","../../rollup/build/tsc/src/style-spec/style-spec.js"],"sourcesContent":["\"use strict\";\n\n// Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\nvar stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,]/g;\n\nmodule.exports = function stringify(passedObj, options) {\n  var indent, maxLength, replacer;\n\n  options = options || {};\n  indent = JSON.stringify(\n    [1],\n    undefined,\n    options.indent === undefined ? 2 : options.indent\n  ).slice(2, -3);\n  maxLength =\n    indent === \"\"\n      ? Infinity\n      : options.maxLength === undefined\n      ? 80\n      : options.maxLength;\n  replacer = options.replacer;\n\n  return (function _stringify(obj, currentIndent, reserved) {\n    // prettier-ignore\n    var end, index, items, key, keyPart, keys, length, nextIndent, prettified, start, string, value;\n\n    if (obj && typeof obj.toJSON === \"function\") {\n      obj = obj.toJSON();\n    }\n\n    string = JSON.stringify(obj, replacer);\n\n    if (string === undefined) {\n      return string;\n    }\n\n    length = maxLength - currentIndent.length - reserved;\n\n    if (string.length <= length) {\n      prettified = string.replace(\n        stringOrChar,\n        function (match, stringLiteral) {\n          return stringLiteral || match + \" \";\n        }\n      );\n      if (prettified.length <= length) {\n        return prettified;\n      }\n    }\n\n    if (replacer != null) {\n      obj = JSON.parse(string);\n      replacer = undefined;\n    }\n\n    if (typeof obj === \"object\" && obj !== null) {\n      nextIndent = currentIndent + indent;\n      items = [];\n      index = 0;\n\n      if (Array.isArray(obj)) {\n        start = \"[\";\n        end = \"]\";\n        length = obj.length;\n        for (; index < length; index++) {\n          items.push(\n            _stringify(obj[index], nextIndent, index === length - 1 ? 0 : 1) ||\n              \"null\"\n          );\n        }\n      } else {\n        start = \"{\";\n        end = \"}\";\n        keys = Object.keys(obj);\n        length = keys.length;\n        for (; index < length; index++) {\n          key = keys[index];\n          keyPart = JSON.stringify(key) + \": \";\n          value = _stringify(\n            obj[key],\n            nextIndent,\n            keyPart.length + (index === length - 1 ? 0 : 1)\n          );\n          if (value !== undefined) {\n            items.push(keyPart + value);\n          }\n        }\n      }\n\n      if (items.length > 0) {\n        return [start, indent + items.join(\",\\n\" + nextIndent), end].join(\n          \"\\n\" + currentIndent\n        );\n      }\n    }\n\n    return string;\n  })(passedObj, \"\", 0);\n};\n","import reference from './reference/latest';\nimport stringifyPretty from 'json-stringify-pretty-compact';\nfunction sortKeysBy(obj, reference) {\n    const result = {};\n    for (const key in reference) {\n        if (obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n    }\n    for (const key in obj) {\n        if (result[key] === undefined) {\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\n/**\n * Format a Mapbox GL Style.  Returns a stringified style with its keys\n * sorted in the same order as the reference style.\n *\n * The optional `space` argument is passed to\n * [`JSON.stringify`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify)\n * to generate formatted output.\n *\n * If `space` is unspecified, a default of `2` spaces will be used.\n *\n * @private\n * @param {Object} style a Mapbox GL Style\n * @param {number} [space] space argument to pass to `JSON.stringify`\n * @returns {string} stringified formatted JSON\n * @example\n * var fs = require('fs');\n * var format = require('maplibre-gl-style-spec').format;\n * var style = fs.readFileSync('./source.json', 'utf8');\n * fs.writeFileSync('./dest.json', format(style));\n * fs.writeFileSync('./dest.min.json', format(style, 0));\n */\nfunction format(style, space = 2) {\n    style = sortKeysBy(style, reference.$root);\n    if (style.layers) {\n        style.layers = style.layers.map((layer) => sortKeysBy(layer, reference.layer));\n    }\n    return stringifyPretty(style, { indent: space });\n}\nexport default format;\n//# sourceMappingURL=format.js.map","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","import Reference from './reference/v8.json';\nfunction getPropertyReference(propertyName) {\n    for (let i = 0; i < Reference.layout.length; i++) {\n        for (const key in Reference[Reference.layout[i]]) {\n            if (key === propertyName)\n                return Reference[Reference.layout[i]][key];\n        }\n    }\n    for (let i = 0; i < Reference.paint.length; i++) {\n        for (const key in Reference[Reference.paint[i]]) {\n            if (key === propertyName)\n                return Reference[Reference.paint[i]][key];\n        }\n    }\n    return null;\n}\nexport function eachSource(style, callback) {\n    for (const k in style.sources) {\n        callback(style.sources[k]);\n    }\n}\nexport function eachLayer(style, callback) {\n    for (const layer of style.layers) {\n        callback(layer);\n    }\n}\nexport function eachProperty(style, options, callback) {\n    function inner(layer, propertyType) {\n        const properties = layer[propertyType];\n        if (!properties)\n            return;\n        Object.keys(properties).forEach((key) => {\n            callback({\n                path: [layer.id, propertyType, key],\n                key,\n                value: properties[key],\n                reference: getPropertyReference(key),\n                set(x) {\n                    properties[key] = x;\n                }\n            });\n        });\n    }\n    eachLayer(style, (layer) => {\n        if (options.paint) {\n            inner(layer, 'paint');\n        }\n        if (options.layout) {\n            inner(layer, 'layout');\n        }\n    });\n}\n//# sourceMappingURL=visit.js.map","import URL from 'url';\nimport { eachSource, eachLayer, eachProperty } from '../visit';\nfunction eachLayout(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('layout') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\nfunction eachPaint(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('paint') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\nfunction resolveConstant(style, value) {\n    if (typeof value === 'string' && value[0] === '@') {\n        return resolveConstant(style, style.constants[value]);\n    }\n    else {\n        return value;\n    }\n}\nfunction isFunction(value) {\n    return Array.isArray(value.stops);\n}\nfunction renameProperty(obj, from, to) {\n    obj[to] = obj[from];\n    delete obj[from];\n}\nexport default function (style) {\n    style.version = 8;\n    // Rename properties, reverse coordinates in source and layers\n    eachSource(style, (source) => {\n        if (source.type === 'video' && source['url'] !== undefined) {\n            renameProperty(source, 'url', 'urls');\n        }\n        if (source.type === 'video') {\n            source.coordinates.forEach((coord) => {\n                return coord.reverse();\n            });\n        }\n    });\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['symbol-min-distance'] !== undefined) {\n                renameProperty(layout, 'symbol-min-distance', 'symbol-spacing');\n            }\n        });\n        eachPaint(layer, (paint) => {\n            if (paint['background-image'] !== undefined) {\n                renameProperty(paint, 'background-image', 'background-pattern');\n            }\n            if (paint['line-image'] !== undefined) {\n                renameProperty(paint, 'line-image', 'line-pattern');\n            }\n            if (paint['fill-image'] !== undefined) {\n                renameProperty(paint, 'fill-image', 'fill-pattern');\n            }\n        });\n    });\n    // Inline Constants\n    eachProperty(style, { paint: true, layout: true }, (property) => {\n        const value = resolveConstant(style, property.value);\n        if (isFunction(value)) {\n            value.stops.forEach((stop) => {\n                stop[1] = resolveConstant(style, stop[1]);\n            });\n        }\n        property.set(value);\n    });\n    delete style.constants;\n    eachLayer(style, (layer) => {\n        // get rid of text-max-size, icon-max-size\n        // turn text-size, icon-size into layout properties\n        // https://github.com/mapbox/mapbox-gl-style-spec/issues/255\n        eachLayout(layer, (layout) => {\n            delete layout['text-max-size'];\n            delete layout['icon-max-size'];\n        });\n        eachPaint(layer, (paint) => {\n            if (paint['text-size']) {\n                if (!layer.layout)\n                    layer.layout = {};\n                layer.layout['text-size'] = paint['text-size'];\n                delete paint['text-size'];\n            }\n            if (paint['icon-size']) {\n                if (!layer.layout)\n                    layer.layout = {};\n                layer.layout['icon-size'] = paint['icon-size'];\n                delete paint['icon-size'];\n            }\n        });\n    });\n    function migrateFontstackURL(input) {\n        const inputParsed = URL.parse(input);\n        const inputPathnameParts = inputParsed.pathname.split('/');\n        if (inputParsed.protocol !== 'mapbox:') {\n            return input;\n        }\n        else if (inputParsed.hostname === 'fontstack') {\n            assert(decodeURI(inputParsed.pathname) === '/{fontstack}/{range}.pbf');\n            return 'mapbox://fonts/mapbox/{fontstack}/{range}.pbf';\n        }\n        else if (inputParsed.hostname === 'fonts') {\n            assert(inputPathnameParts[1] === 'v1');\n            assert(decodeURI(inputPathnameParts[3]) === '{fontstack}');\n            assert(decodeURI(inputPathnameParts[4]) === '{range}.pbf');\n            return `mapbox://fonts/${inputPathnameParts[2]}/{fontstack}/{range}.pbf`;\n        }\n        else {\n            assert(false);\n        }\n        function assert(predicate) {\n            if (!predicate) {\n                throw new Error(`Invalid font url: \"${input}\"`);\n            }\n        }\n    }\n    if (style.glyphs) {\n        style.glyphs = migrateFontstackURL(style.glyphs);\n    }\n    function migrateFontStack(font) {\n        function splitAndTrim(string) {\n            return string.split(',').map((s) => {\n                return s.trim();\n            });\n        }\n        if (Array.isArray(font)) {\n            // Assume it's a previously migrated font-array.\n            return font;\n        }\n        else if (typeof font === 'string') {\n            return splitAndTrim(font);\n        }\n        else if (typeof font === 'object') {\n            font.stops.forEach((stop) => {\n                stop[1] = splitAndTrim(stop[1]);\n            });\n            return font;\n        }\n        else {\n            throw new Error('unexpected font value');\n        }\n    }\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['text-font']) {\n                layout['text-font'] = migrateFontStack(layout['text-font']);\n            }\n        });\n    });\n    // Reverse order of symbol layers. This is an imperfect migration.\n    //\n    // The order of a symbol layer in the layers list affects two things:\n    // - how it is drawn relative to other layers (like oneway arrows below bridges)\n    // - the placement priority compared to other layers\n    //\n    // It's impossible to reverse the placement priority without breaking the draw order\n    // in some cases. This migration only reverses the order of symbol layers that\n    // are above all other types of layers.\n    //\n    // Symbol layers that are at the top of the map preserve their priority.\n    // Symbol layers that are below another type (line, fill) of layer preserve their draw order.\n    let firstSymbolLayer = 0;\n    for (let i = style.layers.length - 1; i >= 0; i--) {\n        const layer = style.layers[i];\n        if (layer.type !== 'symbol') {\n            firstSymbolLayer = i + 1;\n            break;\n        }\n    }\n    const symbolLayers = style.layers.splice(firstSymbolLayer);\n    symbolLayers.reverse();\n    style.layers = style.layers.concat(symbolLayers);\n    return style;\n}\n//# sourceMappingURL=v8.js.map","export default function (output, ...inputs) {\n    for (const input of inputs) {\n        for (const k in input) {\n            output[k] = input[k];\n        }\n    }\n    return output;\n}\n//# sourceMappingURL=extend.js.map","class ParsingError extends Error {\n    constructor(key, message) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\nexport default ParsingError;\n//# sourceMappingURL=parsing_error.js.map","/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    constructor(parent, bindings = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n    concat(bindings) {\n        return new Scope(this, bindings);\n    }\n    get(name) {\n        if (this.bindings[name]) {\n            return this.bindings[name];\n        }\n        if (this.parent) {\n            return this.parent.get(name);\n        }\n        throw new Error(`${name} not found in scope.`);\n    }\n    has(name) {\n        if (this.bindings[name])\n            return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\nexport default Scope;\n//# sourceMappingURL=scope.js.map","export const NullType = { kind: 'null' };\nexport const NumberType = { kind: 'number' };\nexport const StringType = { kind: 'string' };\nexport const BooleanType = { kind: 'boolean' };\nexport const ColorType = { kind: 'color' };\nexport const ObjectType = { kind: 'object' };\nexport const ValueType = { kind: 'value' };\nexport const ErrorType = { kind: 'error' };\nexport const CollatorType = { kind: 'collator' };\nexport const FormattedType = { kind: 'formatted' };\nexport const ResolvedImageType = { kind: 'resolvedImage' };\nexport function array(itemType, N) {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\nexport function toString(type) {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    }\n    else {\n        return type.kind;\n    }\n}\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    ResolvedImageType\n];\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected, t) {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    }\n    else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    }\n    else if (expected.kind === t.kind) {\n        return null;\n    }\n    else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\nexport function isValidType(provided, allowedTypes) {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\nexport function isValidNativeType(provided, allowedTypes) {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        }\n        else if (t === 'array') {\n            return Array.isArray(provided);\n        }\n        else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        }\n        else {\n            return t === typeof provided;\n        }\n    });\n}\n//# sourceMappingURL=types.js.map","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","import { parseCSSColor } from 'csscolorparser';\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n    constructor(r, g, b, a = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input) {\n        if (!input) {\n            return undefined;\n        }\n        if (input instanceof Color) {\n            return input;\n        }\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n        return new Color(rgba[0] / 255 * rgba[3], rgba[1] / 255 * rgba[3], rgba[2] / 255 * rgba[3], rgba[3]);\n    }\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString() {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n    }\n    toArray() {\n        const { r, g, b, a } = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n}\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nexport default Color;\n//# sourceMappingURL=color.js.map","// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\nexport default class Collator {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [], { sensitivity: this.sensitivity, usage: 'search' });\n    }\n    compare(lhs, rhs) {\n        return this.collator.compare(lhs, rhs);\n    }\n    resolvedLocale() {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n//# sourceMappingURL=collator.js.map","export class FormattedSection {\n    constructor(text, image, scale, fontStack, textColor) {\n        this.text = text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\nexport default class Formatted {\n    constructor(sections) {\n        this.sections = sections;\n    }\n    static fromString(unformatted) {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n    isEmpty() {\n        if (this.sections.length === 0)\n            return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n            (section.image && section.image.name.length !== 0));\n    }\n    static factory(text) {\n        if (text instanceof Formatted) {\n            return text;\n        }\n        else {\n            return Formatted.fromString(text);\n        }\n    }\n    toString() {\n        if (this.sections.length === 0)\n            return '';\n        return this.sections.map(section => section.text).join('');\n    }\n    serialize() {\n        const serialized = ['format'];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push(['image', section.image.name]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options = {};\n            if (section.fontStack) {\n                options['text-font'] = ['literal', section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options['font-scale'] = section.scale;\n            }\n            if (section.textColor) {\n                options['text-color'] = ['rgba'].concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n//# sourceMappingURL=formatted.js.map","export default class ResolvedImage {\n    constructor(options) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n    toString() {\n        return this.name;\n    }\n    static fromString(name) {\n        if (!name)\n            return null; // treat empty values as no image\n        return new ResolvedImage({ name, available: false });\n    }\n    serialize() {\n        return ['image', this.name];\n    }\n}\n//# sourceMappingURL=resolved_image.js.map","import assert from 'assert';\nimport Color from '../util/color';\nimport Collator from './types/collator';\nimport Formatted from './types/formatted';\nimport ResolvedImage from './types/resolved_image';\nimport { NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array } from './types';\nexport function validateRGBA(r, g, b, a) {\n    if (!(typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255)) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n    if (!(typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1))) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n    return null;\n}\nexport function isValue(mixed) {\n    if (mixed === null) {\n        return true;\n    }\n    else if (typeof mixed === 'string') {\n        return true;\n    }\n    else if (typeof mixed === 'boolean') {\n        return true;\n    }\n    else if (typeof mixed === 'number') {\n        return true;\n    }\n    else if (mixed instanceof Color) {\n        return true;\n    }\n    else if (mixed instanceof Collator) {\n        return true;\n    }\n    else if (mixed instanceof Formatted) {\n        return true;\n    }\n    else if (mixed instanceof ResolvedImage) {\n        return true;\n    }\n    else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function typeOf(value) {\n    if (value === null) {\n        return NullType;\n    }\n    else if (typeof value === 'string') {\n        return StringType;\n    }\n    else if (typeof value === 'boolean') {\n        return BooleanType;\n    }\n    else if (typeof value === 'number') {\n        return NumberType;\n    }\n    else if (value instanceof Color) {\n        return ColorType;\n    }\n    else if (value instanceof Collator) {\n        return CollatorType;\n    }\n    else if (value instanceof Formatted) {\n        return FormattedType;\n    }\n    else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    }\n    else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType;\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            }\n            else if (itemType === t) {\n                continue;\n            }\n            else {\n                itemType = ValueType;\n                break;\n            }\n        }\n        return array(itemType || ValueType, length);\n    }\n    else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\nexport function toString(value) {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    }\n    else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    }\n    else if (value instanceof Color || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    }\n    else {\n        return JSON.stringify(value);\n    }\n}\nexport { Color, Collator };\n//# sourceMappingURL=values.js.map","import assert from 'assert';\nimport { isValue, typeOf, Color } from '../values';\nimport Formatted from '../types/formatted';\nclass Literal {\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (!isValue(args[1]))\n            return context.error('invalid value');\n        const value = args[1];\n        let type = typeOf(value);\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)) {\n            type = expected;\n        }\n        return new Literal(type, value);\n    }\n    evaluate() {\n        return this.value;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return ['literal', this.value];\n        }\n        else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return ['rgba'].concat(this.value.toArray());\n        }\n        else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        }\n        else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return this.value;\n        }\n    }\n}\nexport default Literal;\n//# sourceMappingURL=literal.js.map","class RuntimeError {\n    constructor(message) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n    toJSON() {\n        return this.message;\n    }\n}\nexport default RuntimeError;\n//# sourceMappingURL=runtime_error.js.map","import assert from 'assert';\nimport { ObjectType, ValueType, StringType, NumberType, BooleanType, checkSubtype, toString, array } from '../types';\nimport RuntimeError from '../runtime_error';\nimport { typeOf } from '../values';\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\nclass Assertion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error('Expected at least one argument.');\n        let i = 1;\n        let type;\n        const name = args[0];\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types[type];\n                i++;\n            }\n            else {\n                itemType = ValueType;\n            }\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n            type = array(itemType, N);\n        }\n        else {\n            assert(types[name], name);\n            type = types[name];\n        }\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Assertion(type, parsed);\n    }\n    evaluate(ctx) {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            }\n            else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n        assert(false);\n        return null;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\nexport default Assertion;\n//# sourceMappingURL=assertion.js.map","import { NumberType, ValueType, FormattedType, array, StringType, ColorType, ResolvedImageType, } from '../types';\nimport Formatted, { FormattedSection } from '../types/formatted';\nimport { toString, typeOf } from '../values';\nexport default class FormatExpression {\n    constructor(sections) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expected at least one argument.');\n        }\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object') {\n            return context.error('First argument must be an image or text section.');\n        }\n        const sections = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = args[i];\n            if (nextTokenMayBeObject && typeof arg === 'object' && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale)\n                        return null;\n                }\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font)\n                        return null;\n                }\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor)\n                        return null;\n                }\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            }\n            else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content)\n                    return null;\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error('Formatted text type must be \\'string\\', \\'value\\', \\'image\\' or \\'null\\'.');\n                nextTokenMayBeObject = true;\n                sections.push({ content, scale: null, font: null, textColor: null });\n            }\n        }\n        return new FormatExpression(sections);\n    }\n    evaluate(ctx) {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n            return new FormattedSection(toString(evaluatedContent), null, section.scale ? section.scale.evaluate(ctx) : null, section.font ? section.font.evaluate(ctx).join(',') : null, section.textColor ? section.textColor.evaluate(ctx) : null);\n        };\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n    eachChild(fn) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n    outputDefined() {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n    serialize() {\n        const serialized = ['format'];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n//# sourceMappingURL=format.js.map","import { ResolvedImageType, StringType } from '../types';\nimport ResolvedImage from '../types/resolved_image';\nexport default class ImageExpression {\n    constructor(input) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2) {\n            return context.error('Expected two arguments.');\n        }\n        const name = context.parse(args[1], 1, StringType);\n        if (!name)\n            return context.error('No image name provided.');\n        return new ImageExpression(name);\n    }\n    evaluate(ctx) {\n        const evaluatedImageName = this.input.evaluate(ctx);\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages)\n            value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n        return value;\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n    serialize() {\n        return ['image', this.input.serialize()];\n    }\n}\n//# sourceMappingURL=image.js.map","import assert from 'assert';\nimport { BooleanType, ColorType, NumberType, StringType, ValueType } from '../types';\nimport { Color, toString as valueToString, validateRGBA } from '../values';\nimport RuntimeError from '../runtime_error';\nimport Formatted from '../types/formatted';\nimport FormatExpression from '../definitions/format';\nimport ImageExpression from '../definitions/image';\nimport ResolvedImage from '../types/resolved_image';\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error('Expected at least one argument.');\n        const name = args[0];\n        assert(types[name], name);\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error('Expected one argument.');\n        const type = types[name];\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Coercion(type, parsed);\n    }\n    evaluate(ctx) {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        }\n        else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                }\n                else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c)\n                        return c;\n                }\n                else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    }\n                    else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color(input[0] / 255, input[1] / 255, input[2] / 255, input[3]);\n                    }\n                }\n            }\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        }\n        else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null)\n                    return 0;\n                const num = Number(value);\n                if (isNaN(num))\n                    continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        }\n        else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        }\n        else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n        }\n        else {\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{ content: this.args[0], scale: null, font: null, textColor: null }]).serialize();\n        }\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n        const serialized = [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\nexport default Coercion;\n//# sourceMappingURL=coercion.js.map","import { Color } from './values';\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\nclass EvaluationContext {\n    constructor() {\n        this.globals = null;\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n    }\n    id() {\n        return this.feature && 'id' in this.feature ? this.feature.id : null;\n    }\n    geometryType() {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n    geometry() {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n    canonicalID() {\n        return this.canonical;\n    }\n    properties() {\n        return this.feature && this.feature.properties || {};\n    }\n    parseColor(input) {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\nexport default EvaluationContext;\n//# sourceMappingURL=evaluation_context.js.map","import { toString } from './types';\nimport ParsingContext from './parsing_context';\nimport assert from 'assert';\nclass CompoundExpression {\n    constructor(name, type, evaluate, args) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n    evaluate(ctx) {\n        return this._evaluate(ctx, this.args);\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n    static parse(args, context) {\n        const op = args[0];\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n        const overloads = availableOverloads.filter(([signature]) => (!Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n        let signatureContext = null;\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope);\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n        assert(!signatureContext || signatureContext.errors.length > 0);\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        }\n        else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed)\n                    return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n        return null;\n    }\n    static register(registry, definitions) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\nfunction stringifySignature(signature) {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    }\n    else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\nexport default CompoundExpression;\n//# sourceMappingURL=compound_expression.js.map","import { StringType, BooleanType, CollatorType } from '../types';\nimport Collator from '../types/collator';\nexport default class CollatorExpression {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error('Expected one argument.');\n        const options = args[1];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error('Collator options argument must be an object.');\n        const caseSensitive = context.parse(options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive)\n            return null;\n        const diacriticSensitive = context.parse(options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive)\n            return null;\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n    evaluate(ctx) {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n    eachChild(fn) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n    outputDefined() {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n    serialize() {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return ['collator', options];\n    }\n}\n//# sourceMappingURL=collator.js.map","import { isValue } from '../values';\nimport { BooleanType } from '../types';\nconst EXTENT = 8192;\nfunction updateBBox(bbox, coord) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\nfunction mercatorXfromLng(lng) {\n    return (180 + lng) / 360;\n}\nfunction mercatorYfromLat(lat) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\nfunction boxWithinBox(bbox1, bbox2) {\n    if (bbox1[0] <= bbox2[0])\n        return false;\n    if (bbox1[2] >= bbox2[2])\n        return false;\n    if (bbox1[1] <= bbox2[1])\n        return false;\n    if (bbox1[3] >= bbox2[3])\n        return false;\n    return true;\n}\nfunction getTileCoordinates(p, canonical) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1]))\n                return false;\n            if (rayIntersect(point, ring[j], ring[j + 1]))\n                inside = !inside;\n        }\n    }\n    return inside;\n}\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i]))\n            return true;\n    }\n    return false;\n}\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 = (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0))\n        return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0)\n        return false;\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b))\n        return true;\n    return false;\n}\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i]))\n            return true;\n    }\n    return false;\n}\nfunction getTilePolygon(coordinates, bbox, canonical) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\nfunction getTilePolygons(coordinates, bbox, canonical) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\nfunction pointsWithinPolygons(ctx, polygonGeometry) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const canonical = ctx.canonicalID();\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nfunction linesWithinPolygons(ctx, polygonGeometry) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const canonical = ctx.canonicalID();\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nclass Within {\n    constructor(geojson, geometries) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            }\n            else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            }\n            else if (geojson.type === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error('\\'within\\' expression requires valid geojson object that contains polygon geometry type.');\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        return ['within', this.geojson];\n    }\n}\nexport default Within;\n//# sourceMappingURL=within.js.map","import CompoundExpression from './compound_expression';\nimport Within from './definitions/within';\nfunction isFeatureConstant(e) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        }\n        else if (e.name === 'feature-state') {\n            return false;\n        }\n        else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        }\n        else if (e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id') {\n            return false;\n        }\n        else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n    if (e instanceof Within) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isStateConstant(e) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isGlobalPropertyConstant(e, properties) {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) {\n        return false;\n    }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) {\n            result = false;\n        }\n    });\n    return result;\n}\nexport { isFeatureConstant, isGlobalPropertyConstant, isStateConstant };\n//# sourceMappingURL=is_constant.js.map","class Var {\n    constructor(name, boundExpression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n    static parse(args, context) {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error('\\'var\\' expression requires exactly one string literal argument.');\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n        return new Var(name, context.scope.get(name));\n    }\n    evaluate(ctx) {\n        return this.boundExpression.evaluate(ctx);\n    }\n    eachChild() { }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return ['var', this.name];\n    }\n}\nexport default Var;\n//# sourceMappingURL=var.js.map","import Scope from './scope';\nimport { checkSubtype } from './types';\nimport ParsingError from './parsing_error';\nimport Literal from './definitions/literal';\nimport Assertion from './definitions/assertion';\nimport Coercion from './definitions/coercion';\nimport EvaluationContext from './evaluation_context';\nimport CompoundExpression from './compound_expression';\nimport CollatorExpression from './definitions/collator';\nimport Within from './definitions/within';\nimport { isGlobalPropertyConstant, isFeatureConstant } from './is_constant';\nimport Var from './definitions/var';\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    constructor(registry, path = [], expectedType, scope = new Scope(), errors = []) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(expr, index, expectedType, bindings, options = {}) {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n    _parse(expr, options) {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n        function annotate(parsed, type, typeAnnotation) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            }\n            else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            }\n            else {\n                return parsed;\n            }\n        }\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error('Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].');\n            }\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed)\n                    return null;\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    }\n                    else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    }\n                    catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n                return parsed;\n            }\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        else if (typeof expr === 'undefined') {\n            return this.error('\\'undefined\\' value invalid. Use null instead.');\n        }\n        else if (typeof expr === 'object') {\n            return this.error('Bare objects invalid. Use [\"literal\", {...}] instead.');\n        }\n        else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index, expectedType, bindings) {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(this.registry, path, expectedType || null, scope, this.errors);\n    }\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error, ...keys) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected, t) {\n        const error = checkSubtype(expected, t);\n        if (error)\n            this.error(error);\n        return error;\n    }\n}\nexport default ParsingContext;\nfunction isConstant(expression) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    }\n    else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    }\n    else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    }\n    else if (expression instanceof Within) {\n        return false;\n    }\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        }\n        else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'accumulated', 'is-supported-script']);\n}\n//# sourceMappingURL=parsing_context.js.map","import RuntimeError from './runtime_error';\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops, input) {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n            lowerIndex = currentIndex + 1;\n        }\n        else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        }\n        else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=stops.js.map","import { NumberType } from '../types';\nimport { findStopLessThanOrEqualTo } from '../stops';\nclass Step {\n    constructor(type, input, stops) {\n        this.type = type;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static parse(args, context) {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error('Expected an even number of arguments.');\n        }\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n            const labelKey = i;\n            const valueKey = i + 1;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n        return new Step(outputType, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n    serialize() {\n        const serialized = ['step', this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\nexport default Step;\n//# sourceMappingURL=step.js.map","'use strict';\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p1y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype = {\n    sampleCurveX: function (t) {\n        // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n        return ((this.ax * t + this.bx) * t + this.cx) * t;\n    },\n\n    sampleCurveY: function (t) {\n        return ((this.ay * t + this.by) * t + this.cy) * t;\n    },\n\n    sampleCurveDerivativeX: function (t) {\n        return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n    },\n\n    solveCurveX: function (x, epsilon) {\n        if (epsilon === undefined) epsilon = 1e-6;\n\n        if (x < 0.0) return 0.0;\n        if (x > 1.0) return 1.0;\n\n        var t = x;\n\n        // First try a few iterations of Newton's method - normally very fast.\n        for (var i = 0; i < 8; i++) {\n            var x2 = this.sampleCurveX(t) - x;\n            if (Math.abs(x2) < epsilon) return t;\n\n            var d2 = this.sampleCurveDerivativeX(t);\n            if (Math.abs(d2) < 1e-6) break;\n\n            t = t - x2 / d2;\n        }\n\n        // Fall back to the bisection method for reliability.\n        var t0 = 0.0;\n        var t1 = 1.0;\n        t = x;\n\n        for (i = 0; i < 20; i++) {\n            x2 = this.sampleCurveX(t);\n            if (Math.abs(x2 - x) < epsilon) break;\n\n            if (x > x2) {\n                t0 = t;\n            } else {\n                t1 = t;\n            }\n\n            t = (t1 - t0) * 0.5 + t0;\n        }\n\n        return t;\n    },\n\n    solve: function (x, epsilon) {\n        return this.sampleCurveY(this.solveCurveX(x, epsilon));\n    }\n};\n","import Color from './color';\nexport function number(a, b, t) {\n    return (a * (1 - t)) + (b * t);\n}\nexport function color(from, to, t) {\n    return new Color(number(from.r, to.r, t), number(from.g, to.g, t), number(from.b, to.b, t), number(from.a, to.a, t));\n}\nexport function array(from, to, t) {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n//# sourceMappingURL=interpolate.js.map","import Color from './color';\nimport { number as interpolateNumber } from './interpolate';\n// Constants\nconst Xn = 0.950470, // D65 standard referent\nYn = 1, Zn = 1.088830, t0 = 4 / 29, t1 = 6 / 29, t2 = 3 * t1 * t1, t3 = t1 * t1 * t1, deg2rad = Math.PI / 180, rad2deg = 180 / Math.PI;\n// Utilities\nfunction xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\nfunction lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\nfunction xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\nfunction rgb2xyz(x) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n// LAB\nfunction rgbToLab(rgbColor) {\n    const b = rgb2xyz(rgbColor.r), a = rgb2xyz(rgbColor.g), l = rgb2xyz(rgbColor.b), x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn), y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn), z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\nfunction labToRgb(labColor) {\n    let y = (labColor.l + 16) / 116, x = isNaN(labColor.a) ? y : y + labColor.a / 500, z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n    xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z), xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z), labColor.alpha);\n}\nfunction interpolateLab(from, to, t) {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n// HCL\nfunction rgbToHcl(rgbColor) {\n    const { l, a, b } = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\nfunction hclToRgb(hclColor) {\n    const h = hclColor.h * deg2rad, c = hclColor.c, l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\nfunction interpolateHue(a, b, t) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\nfunction interpolateHcl(from, to, t) {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n//# sourceMappingURL=color_spaces.js.map","import UnitBezier from '@mapbox/unitbezier';\nimport * as interpolate from '../../util/interpolate';\nimport { toString, NumberType, ColorType } from '../types';\nimport { findStopLessThanOrEqualTo } from '../stops';\nimport { hcl, lab } from '../../util/color_spaces';\nclass Interpolate {\n    constructor(type, operator, interpolation, input, stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static interpolationFactor(interpolation, input, lower, upper) {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        }\n        else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        }\n        else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n    static parse(args, context) {\n        let [operator, interpolation, input, ...rest] = args;\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error('Expected an interpolation type expression.', 1);\n        }\n        if (interpolation[0] === 'linear') {\n            interpolation = { name: 'linear' };\n        }\n        else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error('Exponential interpolation requires a numeric base.', 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        }\n        else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: controlPoints\n            };\n        }\n        else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error('Expected an even number of arguments.');\n        }\n        input = context.parse(input, 2, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        }\n        else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number')) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n        return new Interpolate(outputType, operator, interpolation, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n        if (this.operator === 'interpolate') {\n            return interpolate[this.type.kind.toLowerCase()](outputLower, outputUpper, t); // eslint-disable-line import/namespace\n        }\n        else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        }\n        else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n    serialize() {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = ['linear'];\n        }\n        else if (this.interpolation.name === 'exponential') {\n            if (this.interpolation.base === 1) {\n                interpolation = ['linear'];\n            }\n            else {\n                interpolation = ['exponential', this.interpolation.base];\n            }\n        }\n        else {\n            interpolation = ['cubic-bezier'].concat(this.interpolation.controlPoints);\n        }\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(this.labels[i], this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    }\n    else if (base === 1) {\n        return progress / difference;\n    }\n    else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\nexport default Interpolate;\n//# sourceMappingURL=interpolate.js.map","import assert from 'assert';\nimport { checkSubtype, ValueType } from '../types';\nimport ResolvedImage from '../types/resolved_image';\nclass Coalesce {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expectected at least one argument.');\n        }\n        let outputType = null;\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, { typeAnnotation: 'omit' });\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce(outputType, parsedArgs);\n    }\n    evaluate(ctx) {\n        let result = null;\n        let argCount = 0;\n        let requestedImageName;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image name so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                if (!requestedImageName) {\n                    requestedImageName = result.name;\n                }\n                result = null;\n                if (argCount === this.args.length) {\n                    result = requestedImageName;\n                }\n            }\n            if (result !== null)\n                break;\n        }\n        return result;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        const serialized = ['coalesce'];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\nexport default Coalesce;\n//# sourceMappingURL=coalesce.js.map","class Let {\n    constructor(bindings, result) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n    evaluate(ctx) {\n        return this.result.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n        const bindings = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error('Variable names must contain only alphanumeric characters or \\'_\\'.', i);\n            }\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value)\n                return null;\n            bindings.push([name, value]);\n        }\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result)\n            return null;\n        return new Let(bindings, result);\n    }\n    outputDefined() {\n        return this.result.outputDefined();\n    }\n    serialize() {\n        const serialized = ['let'];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\nexport default Let;\n//# sourceMappingURL=let.js.map","import { array, ValueType, NumberType } from '../types';\nimport RuntimeError from '../runtime_error';\nclass At {\n    constructor(type, index, input) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n        if (!index || !input)\n            return null;\n        const t = input.type;\n        return new At(t.itemType, index, input);\n    }\n    evaluate(ctx) {\n        const index = this.index.evaluate(ctx);\n        const array = this.input.evaluate(ctx);\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n        return array[index];\n    }\n    eachChild(fn) {\n        fn(this.index);\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return ['at', this.index.serialize(), this.input.serialize()];\n    }\n}\nexport default At;\n//# sourceMappingURL=at.js.map","import { BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType, } from '../types';\nimport RuntimeError from '../runtime_error';\nimport { typeOf } from '../values';\nclass In {\n    constructor(needle, haystack) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n    static parse(args, context) {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n        return new In(needle, haystack);\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!haystack)\n            return false;\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n        return haystack.indexOf(needle) >= 0;\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        return ['in', this.needle.serialize(), this.haystack.serialize()];\n    }\n}\nexport default In;\n//# sourceMappingURL=in.js.map","import { BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType, } from '../types';\nimport RuntimeError from '../runtime_error';\nimport { typeOf } from '../values';\nclass IndexOf {\n    constructor(needle, haystack, fromIndex) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex)\n                return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        }\n        else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n        if (this.fromIndex) {\n            const fromIndex = this.fromIndex.evaluate(ctx);\n            return haystack.indexOf(needle, fromIndex);\n        }\n        return haystack.indexOf(needle);\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return ['index-of', this.needle.serialize(), this.haystack.serialize(), fromIndex];\n        }\n        return ['index-of', this.needle.serialize(), this.haystack.serialize()];\n    }\n}\nexport default IndexOf;\n//# sourceMappingURL=index_of.js.map","import assert from 'assert';\nimport { typeOf } from '../values';\nimport { ValueType } from '../types';\nclass Match {\n    constructor(inputType, outputType, input, cases, outputs, otherwise) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error('Expected an even number of arguments.');\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error('Branch labels must be numbers or strings.');\n                }\n                else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n                }\n                else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error('Numeric branch labels must be integer values.');\n                }\n                else if (!inputType) {\n                    inputType = typeOf(label);\n                }\n                else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n                cases[String(label)] = outputs.length;\n            }\n            const result = context.parse(value, i, outputType);\n            if (!result)\n                return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input)\n            return null;\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        assert(inputType && outputType);\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype(inputType, input.type)) {\n            return null;\n        }\n        return new Match(inputType, outputType, input, cases, outputs, otherwise);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n    serialize() {\n        const serialized = ['match', this.input.serialize()];\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput = [];\n        const outputLookup = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            }\n            else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n        const coerceLabel = (label) => this.inputType.kind === 'number' ? Number(label) : label;\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            }\n            else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\nexport default Match;\n//# sourceMappingURL=match.js.map","import assert from 'assert';\nimport { BooleanType } from '../types';\nclass Case {\n    constructor(type, branches, otherwise) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error('Expected an odd number of arguments.');\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test)\n                return null;\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result)\n                return null;\n            branches.push([test, result]);\n            outputType = outputType || result.type;\n        }\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        assert(outputType);\n        return new Case(outputType, branches, otherwise);\n    }\n    evaluate(ctx) {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n    serialize() {\n        const serialized = ['case'];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\nexport default Case;\n//# sourceMappingURL=case.js.map","import { ValueType, NumberType, StringType, array, toString, isValidType, isValidNativeType, } from '../types';\nimport RuntimeError from '../runtime_error';\nimport { typeOf } from '../values';\nclass Slice {\n    constructor(type, input, beginIndex, endIndex) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n        if (!input || !beginIndex)\n            return null;\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${toString(input.type)} instead`);\n        }\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex)\n                return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        }\n        else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const beginIndex = this.beginIndex.evaluate(ctx);\n        if (!isValidNativeType(input, ['string', 'array'])) {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${toString(typeOf(input))} instead.`);\n        }\n        if (this.endIndex) {\n            const endIndex = this.endIndex.evaluate(ctx);\n            return input.slice(beginIndex, endIndex);\n        }\n        return input.slice(beginIndex);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return ['slice', this.input.serialize(), this.beginIndex.serialize(), endIndex];\n        }\n        return ['slice', this.input.serialize(), this.beginIndex.serialize()];\n    }\n}\nexport default Slice;\n//# sourceMappingURL=slice.js.map","import { toString, ValueType, BooleanType, CollatorType } from '../types';\nimport Assertion from './assertion';\nimport { typeOf } from '../values';\nimport RuntimeError from '../runtime_error';\nfunction isComparableType(op, type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    }\n    else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\nfunction eq(ctx, a, b) { return a === b; }\nfunction neq(ctx, a, b) { return a !== b; }\nfunction lt(ctx, a, b) { return a < b; }\nfunction gt(ctx, a, b) { return a > b; }\nfunction lteq(ctx, a, b) { return a <= b; }\nfunction gteq(ctx, a, b) { return a >= b; }\nfunction eqCollate(ctx, a, b, c) { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx, a, b, c) { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx, a, b, c) { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx, a, b, c) { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx, a, b, c) { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx, a, b, c) { return c.compare(a, b) >= 0; }\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op, compareBasic, compareWithCollator) {\n    const isOrderComparison = op !== '==' && op !== '!=';\n    return class Comparison {\n        constructor(lhs, rhs, collator) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n        static parse(args, context) {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error('Expected two or three arguments.');\n            const op = args[0];\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs)\n                return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs)\n                return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n            if (lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value') {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                }\n                else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n            let collator = null;\n            if (args.length === 4) {\n                if (lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value') {\n                    return context.error('Cannot use collator to compare non-string types.');\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator)\n                    return null;\n            }\n            return new Comparison(lhs, rhs, collator);\n        }\n        evaluate(ctx) {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n        eachChild(fn) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n        outputDefined() {\n            return true;\n        }\n        serialize() {\n            const serialized = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\nexport const Equals = makeComparison('==', eq, eqCollate);\nexport const NotEquals = makeComparison('!=', neq, neqCollate);\nexport const LessThan = makeComparison('<', lt, ltCollate);\nexport const GreaterThan = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n//# sourceMappingURL=comparison.js.map","import { StringType, NumberType } from '../types';\nexport default class NumberFormat {\n    constructor(number, locale, currency, minFractionDigits, maxFractionDigits) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error('Expected two arguments.');\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number)\n            return null;\n        const options = args[2];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error('NumberFormat options argument must be an object.');\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency)\n                return null;\n        }\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits)\n                return null;\n        }\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits)\n                return null;\n        }\n        return new NumberFormat(number, locale, currency, minFractionDigits, maxFractionDigits);\n    }\n    evaluate(ctx) {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [], {\n            style: this.currency ? 'currency' : 'decimal',\n            currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n            minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n            maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n        }).format(this.number.evaluate(ctx));\n    }\n    eachChild(fn) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return ['number-format', this.number.serialize(), options];\n    }\n}\n//# sourceMappingURL=number_format.js.map","import { NumberType, toString } from '../types';\nimport { typeOf } from '../values';\nimport RuntimeError from '../runtime_error';\nclass Length {\n    constructor(input) {\n        this.type = NumberType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n        const input = context.parse(args[1], 1);\n        if (!input)\n            return null;\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n        return new Length(input);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        }\n        else if (Array.isArray(input)) {\n            return input.length;\n        }\n        else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        const serialized = ['length'];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\nexport default Length;\n//# sourceMappingURL=length.js.map","import { NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, ErrorType, CollatorType, array, toString as typeToString, } from '../types';\nimport { typeOf, Color, validateRGBA, toString as valueToString } from '../values';\nimport CompoundExpression from '../compound_expression';\nimport RuntimeError from '../runtime_error';\nimport Let from './let';\nimport Var from './var';\nimport Literal from './literal';\nimport Assertion from './assertion';\nimport Coercion from './coercion';\nimport At from './at';\nimport In from './in';\nimport IndexOf from './index_of';\nimport Match from './match';\nimport Case from './case';\nimport Slice from './slice';\nimport Step from './step';\nimport Interpolate from './interpolate';\nimport Coalesce from './coalesce';\nimport { Equals, NotEquals, LessThan, GreaterThan, LessThanOrEqual, GreaterThanOrEqual } from './comparison';\nimport CollatorExpression from './collator';\nimport NumberFormat from './number_format';\nimport FormatExpression from './format';\nimport ImageExpression from './image';\nimport Length from './length';\nimport Within from './within';\nconst expressions = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within\n};\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error)\n        throw new RuntimeError(error);\n    return new Color(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\nfunction has(key, obj) {\n    return key in obj;\n}\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\nfunction varargs(type) {\n    return { type };\n}\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[k.value] === v.value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === v.value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === v.value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => k.value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => v.value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => v.value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => v.value.indexOf(ctx.properties()[k.value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[k.value], v.value, 0, v.value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\nexport default expressions;\n//# sourceMappingURL=index.js.map","export function success(value) {\n    return { result: 'success', value };\n}\nexport function error(value) {\n    return { result: 'error', value };\n}\n//# sourceMappingURL=result.js.map","export function supportsPropertyExpression(spec) {\n    return spec['property-type'] === 'data-driven' || spec['property-type'] === 'cross-faded-data-driven';\n}\nexport function supportsZoomExpression(spec) {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\nexport function supportsInterpolation(spec) {\n    return !!spec.expression && spec.expression.interpolated;\n}\n//# sourceMappingURL=properties.js.map","export default function getType(val) {\n    if (val instanceof Number) {\n        return 'number';\n    }\n    else if (val instanceof String) {\n        return 'string';\n    }\n    else if (val instanceof Boolean) {\n        return 'boolean';\n    }\n    else if (Array.isArray(val)) {\n        return 'array';\n    }\n    else if (val === null) {\n        return 'null';\n    }\n    else {\n        return typeof val;\n    }\n}\n//# sourceMappingURL=get_type.js.map","import * as colorSpaces from '../util/color_spaces';\nimport Color from '../util/color';\nimport extend from '../util/extend';\nimport getType from '../util/get_type';\nimport * as interpolate from '../util/interpolate';\nimport Interpolate from '../expression/definitions/interpolate';\nimport Formatted from '../expression/types/formatted';\nimport ResolvedImage from '../expression/types/resolved_image';\nimport { supportsInterpolation } from '../util/properties';\nimport { findStopLessThanOrEqualTo } from '../expression/stops';\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\nfunction identityFunction(x) {\n    return x;\n}\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n    if (isColor) {\n        parameters = extend({}, parameters);\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n        if (parameters.default) {\n            parameters.default = Color.parse(parameters.default);\n        }\n        else {\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) { // eslint-disable-line import/namespace\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    }\n    else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    }\n    else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n    }\n    else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    }\n    else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n        const interpolationType = { name: 'linear' };\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({ zoom }, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    }\n    else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            { name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1 } : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({ zoom }) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    }\n    else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\nfunction coalesce(a, b, c) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n    if (c !== undefined)\n        return c;\n}\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number')\n        return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1)\n        return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0])\n        return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0])\n        return parameters.stops[n - 1][1];\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    return parameters.stops[index][1];\n}\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n    // Edge cases\n    if (getType(input) !== 'number')\n        return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1)\n        return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0])\n        return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0])\n        return parameters.stops[n - 1][1];\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(input, base, parameters.stops[index][0], parameters.stops[index + 1][0]);\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    let interp = interpolate[propertySpec.type] || identityFunction; // eslint-disable-line import/namespace\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        const colorspace = colorSpaces[parameters.colorSpace]; // eslint-disable-line import/namespace\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n    return interp(outputLower, outputUpper, t);\n}\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    if (propertySpec.type === 'color') {\n        input = Color.parse(input);\n    }\n    else if (propertySpec.type === 'formatted') {\n        input = Formatted.fromString(input.toString());\n    }\n    else if (propertySpec.type === 'resolvedImage') {\n        input = ResolvedImage.fromString(input.toString());\n    }\n    else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    }\n    else if (base === 1) {\n        return progress / difference;\n    }\n    else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n//# sourceMappingURL=index.js.map","import assert from 'assert';\nimport extend from '../util/extend';\nimport ParsingError from './parsing_error';\nimport ParsingContext from './parsing_context';\nimport EvaluationContext from './evaluation_context';\nimport CompoundExpression from './compound_expression';\nimport Step from './definitions/step';\nimport Interpolate from './definitions/interpolate';\nimport Coalesce from './definitions/coalesce';\nimport Let from './definitions/let';\nimport definitions from './definitions';\nimport * as isConstant from './is_constant';\nimport RuntimeError from './runtime_error';\nimport { success, error } from '../util/result';\nimport { supportsPropertyExpression, supportsZoomExpression, supportsInterpolation } from '../util/properties';\nexport class StyleExpression {\n    constructor(expression, propertySpec) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        return this.expression.evaluate(this._evaluator);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        }\n        catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\nexport function isExpression(expression) {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression, propertySpec) {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined, propertySpec && propertySpec.type === 'string' ? { typeAnnotation: 'coerce' } : undefined);\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n    return success(new StyleExpression(parsed, propertySpec));\n}\nexport class ZoomConstantExpression {\n    constructor(kind, expression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'constant' && !isConstant.isStateConstant(expression.expression);\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\nexport class ZoomDependentExpression {\n    constructor(kind, expression, zoomStops, interpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'camera' && !isConstant.isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    interpolationFactor(input, lower, upper) {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        }\n        else {\n            return 0;\n        }\n    }\n}\nexport function createPropertyExpression(expressionInput, propertySpec) {\n    const expression = createExpression(expressionInput, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n    const parsed = expression.value.expression;\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    }\n    else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    }\n    else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n    if (!zoomCurve) {\n        return success(isFeatureConstant ?\n            new ZoomConstantExpression('constant', expression.value) :\n            new ZoomConstantExpression('source', expression.value));\n    }\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n    return success(isFeatureConstant ?\n        new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType) :\n        new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType));\n}\nimport { isFunction, createFunction } from '../function';\nimport { Color } from './values';\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction {\n    constructor(parameters, specification) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n    static deserialize(serialized) {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n    static serialize(input) {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\nexport function normalizePropertyExpression(value, specification) {\n    if (isFunction(value)) {\n        return new StylePropertyFunction(value, specification);\n    }\n    else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n    }\n    else {\n        let constant = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression) {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n    }\n    else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n    }\n    else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n        result = expression;\n    }\n    if (result instanceof ParsingError) {\n        return result;\n    }\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        }\n        else if (!result && childResult) {\n            result = new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        }\n        else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n    return result;\n}\nimport { ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, ResolvedImageType, array } from './types';\nfunction getExpectedType(spec) {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n    return types[spec.type];\n}\nfunction getDefaultValue(spec) {\n    if (spec.type === 'color' && isFunction(spec.default)) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    }\n    else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    }\n    else if (spec.default === undefined) {\n        return null;\n    }\n    else {\n        return spec.default;\n    }\n}\n//# sourceMappingURL=index.js.map","import assert from 'assert';\nexport default convertFunction;\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\nfunction convertFunction(parameters, propertySpec) {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    }\n    else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    }\n    else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\nfunction convertIdentityFunction(parameters, propertySpec) {\n    const get = ['get', parameters.property];\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    }\n    else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    }\n    else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n        case 'hcl': return 'interpolate-hcl';\n        case 'lab': return 'interpolate-lab';\n        default: return 'interpolate';\n    }\n}\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n        return expression;\n    }\n    else {\n        const expression = ['step', ['zoom']];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return expression;\n    }\n}\nfunction coalesce(a, b) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n}\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    }\n    else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    }\n    else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    }\n    else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : ['exponential', base],\n            ['number', get]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    }\n    else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    }\n    else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? ['linear'] : ['exponential', base], input];\n    }\n    else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n    fixupDegenerateStepCurve(expression);\n    return expression;\n}\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    }\n    else {\n        assert(propertySpec.expression);\n        return propertySpec.expression.interpolated ? 'exponential' : 'interval';\n    }\n}\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s) {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0)\n            result.push(literal);\n        result.push(['get', match[1]]);\n    }\n    if (result.length === 1) {\n        return s;\n    }\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    }\n    else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n    return result;\n}\n//# sourceMappingURL=convert.js.map","import { createExpression } from '../expression';\nexport default createFilter;\nexport { isExpressionFilter };\nfunction isExpressionFilter(filter) {\n    if (filter === true || filter === false) {\n        return true;\n    }\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n        case 'has':\n            return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n        case 'in':\n            return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n        case '!in':\n        case '!has':\n        case 'none':\n            return false;\n        case '==':\n        case '!=':\n        case '>':\n        case '>=':\n        case '<':\n        case '<=':\n            return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n        case 'any':\n        case 'all':\n            for (const f of filter.slice(1)) {\n                if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                    return false;\n                }\n            }\n            return true;\n        default:\n            return true;\n    }\n}\nconst filterSpec = {\n    'type': 'boolean',\n    'default': false,\n    'transition': false,\n    'property-type': 'data-driven',\n    'expression': {\n        'interpolated': false,\n        'parameters': ['zoom', 'feature']\n    }\n};\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter maplibre gl filter\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter) {\n    if (filter === null || filter === undefined) {\n        return { filter: () => true, needGeometry: false };\n    }\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const compiled = createExpression(filter, filterSpec);\n    if (compiled.result === 'error') {\n        throw new Error(compiled.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    }\n    else {\n        const needGeometry = geometryNeeded(filter);\n        return { filter: (globalProperties, feature, canonical) => compiled.value.evaluate(globalProperties, feature, {}, canonical),\n            needGeometry };\n    }\n}\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter))\n        return false;\n    if (filter[0] === 'within')\n        return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index]))\n            return true;\n    }\n    return false;\n}\nfunction convertFilter(filter) {\n    if (!filter)\n        return true;\n    const op = filter[0];\n    if (filter.length <= 1)\n        return (op !== 'any');\n    const converted = op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n            op === '<' ||\n                op === '>' ||\n                op === '<=' ||\n                op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n                op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n                    op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n                        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n                            op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n                                op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n                                    op === 'has' ? convertHasOp(filter[1]) :\n                                        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n                                            op === 'within' ? filter :\n                                                true;\n    return converted;\n}\nfunction convertComparisonOp(property, value, op) {\n    switch (property) {\n        case '$type':\n            return [`filter-type-${op}`, value];\n        case '$id':\n            return [`filter-id-${op}`, value];\n        default:\n            return [`filter-${op}`, property, value];\n    }\n}\nfunction convertDisjunctionOp(filters) {\n    return ['any'].concat(filters.map(convertFilter));\n}\nfunction convertInOp(property, values) {\n    if (values.length === 0) {\n        return false;\n    }\n    switch (property) {\n        case '$type':\n            return ['filter-type-in', ['literal', values]];\n        case '$id':\n            return ['filter-id-in', ['literal', values]];\n        default:\n            if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n                return ['filter-in-large', property, ['literal', values.sort(compare)]];\n            }\n            else {\n                return ['filter-in-small', property, ['literal', values]];\n            }\n    }\n}\nfunction convertHasOp(property) {\n    switch (property) {\n        case '$type':\n            return true;\n        case '$id':\n            return ['filter-has-id'];\n        default:\n            return ['filter-has', property];\n    }\n}\nfunction convertNegation(filter) {\n    return ['!', filter];\n}\n//# sourceMappingURL=index.js.map","import { isExpressionFilter } from './index';\n/**\n * Convert the given legacy filter to (the JSON representation of) an\n * equivalent expression\n * @private\n */\nexport default function convertFilter(filter) {\n    return _convertFilter(filter, {});\n}\n/*\n * Convert the given filter to an expression, storing the expected types for\n * any feature properties referenced in expectedTypes.\n *\n * These expected types are needed in order to construct preflight type checks\n * needed for handling 'any' filters. A preflight type check is necessary in\n * order to mimic legacy filters' semantics around expected type mismatches.\n * For example, consider the legacy filter:\n *\n *     [\"any\", [\"all\", [\">\", \"y\", 0], [\">\", \"y\", 0]], [\">\", \"x\", 0]]\n *\n * Naively, we might convert this to the expression:\n *\n *     [\"any\", [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]], [\">\", [\"get\", \"x\"], 0]]\n *\n * But if we tried to evaluate this against, say `{x: 1, y: null, z: 0}`, the\n * [\">\", [\"get\", \"y\"], 0] would cause an evaluation error, leading to the\n * entire filter returning false. Legacy filter semantics, though, ask for\n * [\">\", \"y\", 0] to simply return `false` when `y` is of the wrong type,\n * allowing the subsequent terms of the outer \"any\" expression to be evaluated\n * (resulting, in this case, in a `true` value, because x > 0).\n *\n * We account for this by inserting a preflight type-checking expression before\n * each \"any\" term, allowing us to avoid evaluating the actual converted filter\n * if any type mismatches would cause it to produce an evalaution error:\n *\n *     [\"any\",\n *       [\"case\",\n *         [\"all\", [\"==\", [\"typeof\", [\"get\", \"y\"]], \"number\"], [\"==\", [\"typeof\", [\"get\", \"z\"], \"number]],\n *         [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]],\n *         false\n *       ],\n *       [\"case\",\n *         [\"==\", [\"typeof\", [\"get\", \"x\"], \"number\"]],\n *         [\">\", [\"get\", \"x\"], 0],\n *         false\n *       ]\n *     ]\n *\n * An alternative, possibly more direct approach would be to use type checks\n * in the conversion of each comparison operator, so that the converted version\n * of each individual ==, >=, etc. would mimic the legacy filter semantics. The\n * downside of this approach is that it can lead to many more type checks than\n * would otherwise be necessary: outside the context of an \"any\" expression,\n * bailing out due to a runtime type error (expression semantics) and returning\n * false (legacy filter semantics) are equivalent: they cause the filter to\n * produce a `false` result.\n */\nfunction _convertFilter(filter, expectedTypes) {\n    if (isExpressionFilter(filter)) {\n        return filter;\n    }\n    if (!filter)\n        return true;\n    const op = filter[0];\n    if (filter.length <= 1)\n        return (op !== 'any');\n    let converted;\n    if (op === '==' ||\n        op === '!=' ||\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=') {\n        const [, property, value] = filter;\n        converted = convertComparisonOp(property, value, op, expectedTypes);\n    }\n    else if (op === 'any') {\n        const children = filter.slice(1).map(f => {\n            const types = {};\n            const child = _convertFilter(f, types);\n            const typechecks = runtimeTypeChecks(types);\n            return typechecks === true ? child : ['case', typechecks, child, false];\n        });\n        return ['any'].concat(children);\n    }\n    else if (op === 'all') {\n        const children = filter.slice(1).map(f => _convertFilter(f, expectedTypes));\n        return children.length > 1 ? ['all'].concat(children) : [].concat(...children);\n    }\n    else if (op === 'none') {\n        return ['!', _convertFilter(['any'].concat(filter.slice(1)), {})];\n    }\n    else if (op === 'in') {\n        converted = convertInOp(filter[1], filter.slice(2));\n    }\n    else if (op === '!in') {\n        converted = convertInOp(filter[1], filter.slice(2), true);\n    }\n    else if (op === 'has') {\n        converted = convertHasOp(filter[1]);\n    }\n    else if (op === '!has') {\n        converted = ['!', convertHasOp(filter[1])];\n    }\n    else {\n        converted = true;\n    }\n    return converted;\n}\n// Given a set of feature properties and an expected type for each one,\n// construct an boolean expression that tests whether each property has the\n// right type.\n// E.g.: for {name: 'string', population: 'number'}, return\n// [ 'all',\n//   ['==', ['typeof', ['get', 'name'], 'string']],\n//   ['==', ['typeof', ['get', 'population'], 'number]]\n// ]\nfunction runtimeTypeChecks(expectedTypes) {\n    const conditions = [];\n    for (const property in expectedTypes) {\n        const get = property === '$id' ? ['id'] : ['get', property];\n        conditions.push(['==', ['typeof', get], expectedTypes[property]]);\n    }\n    if (conditions.length === 0)\n        return true;\n    if (conditions.length === 1)\n        return conditions[0];\n    return ['all'].concat(conditions);\n}\nfunction convertComparisonOp(property, value, op, expectedTypes) {\n    let get;\n    if (property === '$type') {\n        return [op, ['geometry-type'], value];\n    }\n    else if (property === '$id') {\n        get = ['id'];\n    }\n    else {\n        get = ['get', property];\n    }\n    if (expectedTypes && value !== null) {\n        const type = typeof value;\n        expectedTypes[property] = type;\n    }\n    if (op === '==' && property !== '$id' && value === null) {\n        return [\n            'all',\n            ['has', property],\n            ['==', get, null]\n        ];\n    }\n    else if (op === '!=' && property !== '$id' && value === null) {\n        return [\n            'any',\n            ['!', ['has', property]],\n            ['!=', get, null]\n        ];\n    }\n    return [op, get, value];\n}\nfunction convertInOp(property, values, negate = false) {\n    if (values.length === 0)\n        return negate;\n    let get;\n    if (property === '$type') {\n        get = ['geometry-type'];\n    }\n    else if (property === '$id') {\n        get = ['id'];\n    }\n    else {\n        get = ['get', property];\n    }\n    // Determine if the list of values to be searched is homogenously typed.\n    // If so (and if the type is string or number), then we can use a\n    // [match, input, [...values], true, false] construction rather than a\n    // bunch of `==` tests.\n    let uniformTypes = true;\n    const type = typeof values[0];\n    for (const value of values) {\n        if (typeof value !== type) {\n            uniformTypes = false;\n            break;\n        }\n    }\n    if (uniformTypes && (type === 'string' || type === 'number')) {\n        // Match expressions must have unique values.\n        const uniqueValues = values.sort().filter((v, i) => i === 0 || values[i - 1] !== v);\n        return ['match', get, uniqueValues, !negate, negate];\n    }\n    return [negate ? 'all' : 'any'].concat(values.map(v => [negate ? '!=' : '==', get, v]));\n}\nfunction convertHasOp(property) {\n    if (property === '$type') {\n        return true;\n    }\n    else if (property === '$id') {\n        return ['!=', ['id'], null];\n    }\n    else {\n        return ['has', property];\n    }\n}\n//# sourceMappingURL=convert.js.map","import { eachLayer, eachProperty } from '../visit';\nimport { isExpression } from '../expression';\nimport convertFunction, { convertTokenString } from '../function/convert';\nimport convertFilter from '../feature_filter/convert';\n/**\n * Migrate the given style object in place to use expressions. Specifically,\n * this will convert (a) \"stop\" functions, and (b) legacy filters to their\n * expression equivalents.\n */\nexport default function (style) {\n    const converted = [];\n    eachLayer(style, (layer) => {\n        if (layer.filter) {\n            layer.filter = convertFilter(layer.filter);\n        }\n    });\n    eachProperty(style, { paint: true, layout: true }, ({ path, value, reference, set }) => {\n        if (isExpression(value))\n            return;\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            set(convertFunction(value, reference));\n            converted.push(path.join('.'));\n        }\n        else if (reference.tokens && typeof value === 'string') {\n            set(convertTokenString(value));\n        }\n    });\n    return style;\n}\n//# sourceMappingURL=expressions.js.map","import migrateToV8 from './migrate/v8';\nimport migrateToExpressions from './migrate/expressions';\n/**\n * Migrate a Mapbox GL Style to the latest version.\n *\n * @private\n * @alias migrate\n * @param {object} style a Mapbox GL Style\n * @returns {Object} a migrated style\n * @example\n * var fs = require('fs');\n * var migrate = require('maplibre-gl-style-spec').migrate;\n * var style = fs.readFileSync('./style.json', 'utf8');\n * fs.writeFileSync('./style.json', JSON.stringify(migrate(style)));\n */\nexport default function (style) {\n    let migrated = false;\n    if (style.version === 7) {\n        style = migrateToV8(style);\n        migrated = true;\n    }\n    if (style.version === 8) {\n        migrated = !!migrateToExpressions(style);\n        migrated = true;\n    }\n    if (!migrated) {\n        throw new Error(`Cannot migrate from ${style.version}`);\n    }\n    return style;\n}\n//# sourceMappingURL=migrate.js.map","export default function (style) {\n    const styleIDs = [];\n    const sourceIDs = [];\n    const compositedSourceLayers = [];\n    for (const id in style.sources) {\n        const source = style.sources[id];\n        if (source.type !== 'vector')\n            continue;\n        const match = /^mapbox:\\/\\/(.*)/.exec(source.url);\n        if (!match)\n            continue;\n        styleIDs.push(id);\n        sourceIDs.push(match[1]);\n    }\n    if (styleIDs.length < 2)\n        return style;\n    styleIDs.forEach((id) => {\n        delete style.sources[id];\n    });\n    const compositeID = sourceIDs.join(',');\n    style.sources[compositeID] = {\n        'type': 'vector',\n        'url': `mapbox://${compositeID}`\n    };\n    style.layers.forEach((layer) => {\n        if (styleIDs.indexOf(layer.source) >= 0) {\n            layer.source = compositeID;\n            if ('source-layer' in layer) {\n                if (compositedSourceLayers.indexOf(layer['source-layer']) >= 0) {\n                    throw new Error('Conflicting source layer names');\n                }\n                else {\n                    compositedSourceLayers.push(layer['source-layer']);\n                }\n            }\n        }\n    });\n    return style;\n}\n//# sourceMappingURL=composite.js.map","export default ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n//# sourceMappingURL=ref_properties.js.map","import refProperties from './util/ref_properties';\nfunction deref(layer, parent) {\n    const result = {};\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = parent[k];\n        }\n    });\n    return result;\n}\nexport default derefLayers;\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nfunction derefLayers(layers) {\n    layers = layers.slice();\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[layers[i].ref]);\n        }\n    }\n    return layers;\n}\n//# sourceMappingURL=deref.js.map","/**\n * Deeply compares two object literals.\n *\n * @private\n */\nfunction deepEqual(a, b) {\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b) || a.length !== b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            if (!deepEqual(a[i], b[i]))\n                return false;\n        }\n        return true;\n    }\n    if (typeof a === 'object' && a !== null && b !== null) {\n        if (!(typeof b === 'object'))\n            return false;\n        const keys = Object.keys(a);\n        if (keys.length !== Object.keys(b).length)\n            return false;\n        for (const key in a) {\n            if (!deepEqual(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return a === b;\n}\nexport default deepEqual;\n//# sourceMappingURL=deep_equal.js.map","import isEqual from './util/deep_equal';\nconst operations = {\n    /*\n     * { command: 'setStyle', args: [stylesheet] }\n     */\n    setStyle: 'setStyle',\n    /*\n     * { command: 'addLayer', args: [layer, 'beforeLayerId'] }\n     */\n    addLayer: 'addLayer',\n    /*\n     * { command: 'removeLayer', args: ['layerId'] }\n     */\n    removeLayer: 'removeLayer',\n    /*\n     * { command: 'setPaintProperty', args: ['layerId', 'prop', value] }\n     */\n    setPaintProperty: 'setPaintProperty',\n    /*\n     * { command: 'setLayoutProperty', args: ['layerId', 'prop', value] }\n     */\n    setLayoutProperty: 'setLayoutProperty',\n    /*\n     * { command: 'setFilter', args: ['layerId', filter] }\n     */\n    setFilter: 'setFilter',\n    /*\n     * { command: 'addSource', args: ['sourceId', source] }\n     */\n    addSource: 'addSource',\n    /*\n     * { command: 'removeSource', args: ['sourceId'] }\n     */\n    removeSource: 'removeSource',\n    /*\n     * { command: 'setGeoJSONSourceData', args: ['sourceId', data] }\n     */\n    setGeoJSONSourceData: 'setGeoJSONSourceData',\n    /*\n     * { command: 'setLayerZoomRange', args: ['layerId', 0, 22] }\n     */\n    setLayerZoomRange: 'setLayerZoomRange',\n    /*\n     * { command: 'setLayerProperty', args: ['layerId', 'prop', value] }\n     */\n    setLayerProperty: 'setLayerProperty',\n    /*\n     * { command: 'setCenter', args: [[lon, lat]] }\n     */\n    setCenter: 'setCenter',\n    /*\n     * { command: 'setZoom', args: [zoom] }\n     */\n    setZoom: 'setZoom',\n    /*\n     * { command: 'setBearing', args: [bearing] }\n     */\n    setBearing: 'setBearing',\n    /*\n     * { command: 'setPitch', args: [pitch] }\n     */\n    setPitch: 'setPitch',\n    /*\n     * { command: 'setSprite', args: ['spriteUrl'] }\n     */\n    setSprite: 'setSprite',\n    /*\n     * { command: 'setGlyphs', args: ['glyphsUrl'] }\n     */\n    setGlyphs: 'setGlyphs',\n    /*\n     * { command: 'setTransition', args: [transition] }\n     */\n    setTransition: 'setTransition',\n    /*\n     * { command: 'setLighting', args: [lightProperties] }\n     */\n    setLight: 'setLight'\n};\nfunction addSource(sourceId, after, commands) {\n    commands.push({ command: operations.addSource, args: [sourceId, after[sourceId]] });\n}\nfunction removeSource(sourceId, commands, sourcesRemoved) {\n    commands.push({ command: operations.removeSource, args: [sourceId] });\n    sourcesRemoved[sourceId] = true;\n}\nfunction updateSource(sourceId, after, commands, sourcesRemoved) {\n    removeSource(sourceId, commands, sourcesRemoved);\n    addSource(sourceId, after, commands);\n}\nfunction canUpdateGeoJSON(before, after, sourceId) {\n    let prop;\n    for (prop in before[sourceId]) {\n        if (!Object.prototype.hasOwnProperty.call(before[sourceId], prop))\n            continue;\n        if (prop !== 'data' && !isEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    for (prop in after[sourceId]) {\n        if (!Object.prototype.hasOwnProperty.call(after[sourceId], prop))\n            continue;\n        if (prop !== 'data' && !isEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction diffSources(before, after, commands, sourcesRemoved) {\n    before = before || {};\n    after = after || {};\n    let sourceId;\n    // look for sources to remove\n    for (sourceId in before) {\n        if (!Object.prototype.hasOwnProperty.call(before, sourceId))\n            continue;\n        if (!Object.prototype.hasOwnProperty.call(after, sourceId)) {\n            removeSource(sourceId, commands, sourcesRemoved);\n        }\n    }\n    // look for sources to add/update\n    for (sourceId in after) {\n        if (!Object.prototype.hasOwnProperty.call(after, sourceId))\n            continue;\n        if (!Object.prototype.hasOwnProperty.call(before, sourceId)) {\n            addSource(sourceId, after, commands);\n        }\n        else if (!isEqual(before[sourceId], after[sourceId])) {\n            if (before[sourceId].type === 'geojson' && after[sourceId].type === 'geojson' && canUpdateGeoJSON(before, after, sourceId)) {\n                commands.push({ command: operations.setGeoJSONSourceData, args: [sourceId, after[sourceId].data] });\n            }\n            else {\n                // no update command, must remove then add\n                updateSource(sourceId, after, commands, sourcesRemoved);\n            }\n        }\n    }\n}\nfunction diffLayerPropertyChanges(before, after, commands, layerId, klass, command) {\n    before = before || {};\n    after = after || {};\n    let prop;\n    for (prop in before) {\n        if (!Object.prototype.hasOwnProperty.call(before, prop))\n            continue;\n        if (!isEqual(before[prop], after[prop])) {\n            commands.push({ command, args: [layerId, prop, after[prop], klass] });\n        }\n    }\n    for (prop in after) {\n        if (!Object.prototype.hasOwnProperty.call(after, prop) || Object.prototype.hasOwnProperty.call(before, prop))\n            continue;\n        if (!isEqual(before[prop], after[prop])) {\n            commands.push({ command, args: [layerId, prop, after[prop], klass] });\n        }\n    }\n}\nfunction pluckId(layer) {\n    return layer.id;\n}\nfunction indexById(group, layer) {\n    group[layer.id] = layer;\n    return group;\n}\nfunction diffLayers(before, after, commands) {\n    before = before || [];\n    after = after || [];\n    // order of layers by id\n    const beforeOrder = before.map(pluckId);\n    const afterOrder = after.map(pluckId);\n    // index of layer by id\n    const beforeIndex = before.reduce(indexById, {});\n    const afterIndex = after.reduce(indexById, {});\n    // track order of layers as if they have been mutated\n    const tracker = beforeOrder.slice();\n    // layers that have been added do not need to be diffed\n    const clean = Object.create(null);\n    let i, d, layerId, beforeLayer, afterLayer, insertBeforeLayerId, prop;\n    // remove layers\n    for (i = 0, d = 0; i < beforeOrder.length; i++) {\n        layerId = beforeOrder[i];\n        if (!Object.prototype.hasOwnProperty.call(afterIndex, layerId)) {\n            commands.push({ command: operations.removeLayer, args: [layerId] });\n            tracker.splice(tracker.indexOf(layerId, d), 1);\n        }\n        else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n    }\n    // add/reorder layers\n    for (i = 0, d = 0; i < afterOrder.length; i++) {\n        // work backwards as insert is before an existing layer\n        layerId = afterOrder[afterOrder.length - 1 - i];\n        if (tracker[tracker.length - 1 - i] === layerId)\n            continue;\n        if (Object.prototype.hasOwnProperty.call(beforeIndex, layerId)) {\n            // remove the layer before we insert at the correct position\n            commands.push({ command: operations.removeLayer, args: [layerId] });\n            tracker.splice(tracker.lastIndexOf(layerId, tracker.length - d), 1);\n        }\n        else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n        // add layer at correct position\n        insertBeforeLayerId = tracker[tracker.length - i];\n        commands.push({ command: operations.addLayer, args: [afterIndex[layerId], insertBeforeLayerId] });\n        tracker.splice(tracker.length - i, 0, layerId);\n        clean[layerId] = true;\n    }\n    // update layers\n    for (i = 0; i < afterOrder.length; i++) {\n        layerId = afterOrder[i];\n        beforeLayer = beforeIndex[layerId];\n        afterLayer = afterIndex[layerId];\n        // no need to update if previously added (new or moved)\n        if (clean[layerId] || isEqual(beforeLayer, afterLayer))\n            continue;\n        // If source, source-layer, or type have changes, then remove the layer\n        // and add it back 'from scratch'.\n        if (!isEqual(beforeLayer.source, afterLayer.source) || !isEqual(beforeLayer['source-layer'], afterLayer['source-layer']) || !isEqual(beforeLayer.type, afterLayer.type)) {\n            commands.push({ command: operations.removeLayer, args: [layerId] });\n            // we add the layer back at the same position it was already in, so\n            // there's no need to update the `tracker`\n            insertBeforeLayerId = tracker[tracker.lastIndexOf(layerId) + 1];\n            commands.push({ command: operations.addLayer, args: [afterLayer, insertBeforeLayerId] });\n            continue;\n        }\n        // layout, paint, filter, minzoom, maxzoom\n        diffLayerPropertyChanges(beforeLayer.layout, afterLayer.layout, commands, layerId, null, operations.setLayoutProperty);\n        diffLayerPropertyChanges(beforeLayer.paint, afterLayer.paint, commands, layerId, null, operations.setPaintProperty);\n        if (!isEqual(beforeLayer.filter, afterLayer.filter)) {\n            commands.push({ command: operations.setFilter, args: [layerId, afterLayer.filter] });\n        }\n        if (!isEqual(beforeLayer.minzoom, afterLayer.minzoom) || !isEqual(beforeLayer.maxzoom, afterLayer.maxzoom)) {\n            commands.push({ command: operations.setLayerZoomRange, args: [layerId, afterLayer.minzoom, afterLayer.maxzoom] });\n        }\n        // handle all other layer props, including paint.*\n        for (prop in beforeLayer) {\n            if (!Object.prototype.hasOwnProperty.call(beforeLayer, prop))\n                continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom')\n                continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), operations.setPaintProperty);\n            }\n            else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n                commands.push({ command: operations.setLayerProperty, args: [layerId, prop, afterLayer[prop]] });\n            }\n        }\n        for (prop in afterLayer) {\n            if (!Object.prototype.hasOwnProperty.call(afterLayer, prop) || Object.prototype.hasOwnProperty.call(beforeLayer, prop))\n                continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom')\n                continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), operations.setPaintProperty);\n            }\n            else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n                commands.push({ command: operations.setLayerProperty, args: [layerId, prop, afterLayer[prop]] });\n            }\n        }\n    }\n}\n/**\n * Diff two stylesheet\n *\n * Creates semanticly aware diffs that can easily be applied at runtime.\n * Operations produced by the diff closely resemble the maplibre-gl-js API. Any\n * error creating the diff will fall back to the 'setStyle' operation.\n *\n * Example diff:\n * [\n *     { command: 'setConstant', args: ['@water', '#0000FF'] },\n *     { command: 'setPaintProperty', args: ['background', 'background-color', 'black'] }\n * ]\n *\n * @private\n * @param {*} [before] stylesheet to compare from\n * @param {*} after stylesheet to compare to\n * @returns Array list of changes\n */\nfunction diffStyles(before, after) {\n    if (!before)\n        return [{ command: operations.setStyle, args: [after] }];\n    let commands = [];\n    try {\n        // Handle changes to top-level properties\n        if (!isEqual(before.version, after.version)) {\n            return [{ command: operations.setStyle, args: [after] }];\n        }\n        if (!isEqual(before.center, after.center)) {\n            commands.push({ command: operations.setCenter, args: [after.center] });\n        }\n        if (!isEqual(before.zoom, after.zoom)) {\n            commands.push({ command: operations.setZoom, args: [after.zoom] });\n        }\n        if (!isEqual(before.bearing, after.bearing)) {\n            commands.push({ command: operations.setBearing, args: [after.bearing] });\n        }\n        if (!isEqual(before.pitch, after.pitch)) {\n            commands.push({ command: operations.setPitch, args: [after.pitch] });\n        }\n        if (!isEqual(before.sprite, after.sprite)) {\n            commands.push({ command: operations.setSprite, args: [after.sprite] });\n        }\n        if (!isEqual(before.glyphs, after.glyphs)) {\n            commands.push({ command: operations.setGlyphs, args: [after.glyphs] });\n        }\n        if (!isEqual(before.transition, after.transition)) {\n            commands.push({ command: operations.setTransition, args: [after.transition] });\n        }\n        if (!isEqual(before.light, after.light)) {\n            commands.push({ command: operations.setLight, args: [after.light] });\n        }\n        // Handle changes to `sources`\n        // If a source is to be removed, we also--before the removeSource\n        // command--need to remove all the style layers that depend on it.\n        const sourcesRemoved = {};\n        // First collect the {add,remove}Source commands\n        const removeOrAddSourceCommands = [];\n        diffSources(before.sources, after.sources, removeOrAddSourceCommands, sourcesRemoved);\n        // Push a removeLayer command for each style layer that depends on a\n        // source that's being removed.\n        // Also, exclude any such layers them from the input to `diffLayers`\n        // below, so that diffLayers produces the appropriate `addLayers`\n        // command\n        const beforeLayers = [];\n        if (before.layers) {\n            before.layers.forEach((layer) => {\n                if (sourcesRemoved[layer.source]) {\n                    commands.push({ command: operations.removeLayer, args: [layer.id] });\n                }\n                else {\n                    beforeLayers.push(layer);\n                }\n            });\n        }\n        commands = commands.concat(removeOrAddSourceCommands);\n        // Handle changes to `layers`\n        diffLayers(beforeLayers, after.layers, commands);\n    }\n    catch (e) {\n        // fall back to setStyle\n        console.warn('Unable to compute style diff:', e);\n        commands = [{ command: operations.setStyle, args: [after] }];\n    }\n    return commands;\n}\nexport default diffStyles;\nexport { operations };\n//# sourceMappingURL=diff.js.map","// Note: Do not inherit from Error. It breaks when transpiling to ES5.\nexport default class ValidationError {\n    constructor(key, value, message, identifier) {\n        this.message = (key ? `${key}: ` : '') + message;\n        if (identifier)\n            this.identifier = identifier;\n        if (value !== null && value !== undefined && value.__line__) {\n            this.line = value.__line__;\n        }\n    }\n}\n//# sourceMappingURL=validation_error.js.map","// Note: Do not inherit from Error. It breaks when transpiling to ES5.\nexport default class ParsingError {\n    constructor(error) {\n        this.error = error;\n        this.message = error.message;\n        const match = error.message.match(/line (\\d+)/);\n        this.line = match ? parseInt(match[1], 10) : 0;\n    }\n}\n//# sourceMappingURL=parsing_error.js.map","import ValidationError from '../error/validation_error';\nexport default function validateConstants(options) {\n    const key = options.key;\n    const constants = options.value;\n    if (constants) {\n        return [new ValidationError(key, constants, 'constants have been deprecated as of v8')];\n    }\n    else {\n        return [];\n    }\n}\n//# sourceMappingURL=validate_constants.js.map","// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    }\n    else {\n        return value;\n    }\n}\nexport function deepUnbundle(value) {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    }\n    else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n    return unbundle(value);\n}\n//# sourceMappingURL=unbundle_jsonlint.js.map","import ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport validateSpec from './validate';\nexport default function validateObject(options) {\n    const key = options.key;\n    const object = options.value;\n    const elementSpecs = options.valueSpec || {};\n    const elementValidators = options.objectElementValidators || {};\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    let errors = [];\n    const type = getType(object);\n    if (type !== 'object') {\n        return [new ValidationError(key, object, `object expected, ${type} found`)];\n    }\n    for (const objectKey in object) {\n        const elementSpecKey = objectKey.split('.')[0]; // treat 'paint.*' as 'paint'\n        const elementSpec = elementSpecs[elementSpecKey] || elementSpecs['*'];\n        let validateElement;\n        if (elementValidators[elementSpecKey]) {\n            validateElement = elementValidators[elementSpecKey];\n        }\n        else if (elementSpecs[elementSpecKey]) {\n            validateElement = validateSpec;\n        }\n        else if (elementValidators['*']) {\n            validateElement = elementValidators['*'];\n        }\n        else if (elementSpecs['*']) {\n            validateElement = validateSpec;\n        }\n        else {\n            errors.push(new ValidationError(key, object[objectKey], `unknown property \"${objectKey}\"`));\n            continue;\n        }\n        errors = errors.concat(validateElement({\n            key: (key ? `${key}.` : key) + objectKey,\n            value: object[objectKey],\n            valueSpec: elementSpec,\n            style,\n            styleSpec,\n            object,\n            objectKey\n        }, object));\n    }\n    for (const elementSpecKey in elementSpecs) {\n        // Don't check `required` when there's a custom validator for that property.\n        if (elementValidators[elementSpecKey]) {\n            continue;\n        }\n        if (elementSpecs[elementSpecKey].required && elementSpecs[elementSpecKey]['default'] === undefined && object[elementSpecKey] === undefined) {\n            errors.push(new ValidationError(key, object, `missing required property \"${elementSpecKey}\"`));\n        }\n    }\n    return errors;\n}\n//# sourceMappingURL=validate_object.js.map","import getType from '../util/get_type';\nimport validate from './validate';\nimport ValidationError from '../error/validation_error';\nexport default function validateArray(options) {\n    const array = options.value;\n    const arraySpec = options.valueSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const key = options.key;\n    const validateArrayElement = options.arrayElementValidator || validate;\n    if (getType(array) !== 'array') {\n        return [new ValidationError(key, array, `array expected, ${getType(array)} found`)];\n    }\n    if (arraySpec.length && array.length !== arraySpec.length) {\n        return [new ValidationError(key, array, `array length ${arraySpec.length} expected, length ${array.length} found`)];\n    }\n    if (arraySpec['min-length'] && array.length < arraySpec['min-length']) {\n        return [new ValidationError(key, array, `array length at least ${arraySpec['min-length']} expected, length ${array.length} found`)];\n    }\n    let arrayElementSpec = {\n        'type': arraySpec.value,\n        'values': arraySpec.values\n    };\n    if (styleSpec.$version < 7) {\n        arrayElementSpec['function'] = arraySpec.function;\n    }\n    if (getType(arraySpec.value) === 'object') {\n        arrayElementSpec = arraySpec.value;\n    }\n    let errors = [];\n    for (let i = 0; i < array.length; i++) {\n        errors = errors.concat(validateArrayElement({\n            array,\n            arrayIndex: i,\n            value: array[i],\n            valueSpec: arrayElementSpec,\n            style,\n            styleSpec,\n            key: `${key}[${i}]`\n        }));\n    }\n    return errors;\n}\n//# sourceMappingURL=validate_array.js.map","import getType from '../util/get_type';\nimport ValidationError from '../error/validation_error';\nexport default function validateNumber(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    let type = getType(value);\n    // eslint-disable-next-line no-self-compare\n    if (type === 'number' && value !== value) {\n        type = 'NaN';\n    }\n    if (type !== 'number') {\n        return [new ValidationError(key, value, `number expected, ${type} found`)];\n    }\n    if ('minimum' in valueSpec && value < valueSpec.minimum) {\n        return [new ValidationError(key, value, `${value} is less than the minimum value ${valueSpec.minimum}`)];\n    }\n    if ('maximum' in valueSpec && value > valueSpec.maximum) {\n        return [new ValidationError(key, value, `${value} is greater than the maximum value ${valueSpec.maximum}`)];\n    }\n    return [];\n}\n//# sourceMappingURL=validate_number.js.map","import ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport validate from './validate';\nimport validateObject from './validate_object';\nimport validateArray from './validate_array';\nimport validateNumber from './validate_number';\nimport { isExpression } from '../expression';\nimport { unbundle, deepUnbundle } from '../util/unbundle_jsonlint';\nimport { supportsPropertyExpression, supportsZoomExpression, supportsInterpolation } from '../util/properties';\nexport default function validateFunction(options) {\n    const functionValueSpec = options.valueSpec;\n    const functionType = unbundle(options.value.type);\n    let stopKeyType;\n    let stopDomainValues = {};\n    let previousStopDomainValue;\n    let previousStopDomainZoom;\n    const isZoomFunction = functionType !== 'categorical' && options.value.property === undefined;\n    const isPropertyFunction = !isZoomFunction;\n    const isZoomAndPropertyFunction = getType(options.value.stops) === 'array' &&\n        getType(options.value.stops[0]) === 'array' &&\n        getType(options.value.stops[0][0]) === 'object';\n    const errors = validateObject({\n        key: options.key,\n        value: options.value,\n        valueSpec: options.styleSpec.function,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            stops: validateFunctionStops,\n            default: validateFunctionDefault\n        }\n    });\n    if (functionType === 'identity' && isZoomFunction) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"property\"'));\n    }\n    if (functionType !== 'identity' && !options.value.stops) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"stops\"'));\n    }\n    if (functionType === 'exponential' && options.valueSpec.expression && !supportsInterpolation(options.valueSpec)) {\n        errors.push(new ValidationError(options.key, options.value, 'exponential functions not supported'));\n    }\n    if (options.styleSpec.$version >= 8) {\n        if (isPropertyFunction && !supportsPropertyExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'property functions not supported'));\n        }\n        else if (isZoomFunction && !supportsZoomExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'zoom functions not supported'));\n        }\n    }\n    if ((functionType === 'categorical' || isZoomAndPropertyFunction) && options.value.property === undefined) {\n        errors.push(new ValidationError(options.key, options.value, '\"property\" property is required'));\n    }\n    return errors;\n    function validateFunctionStops(options) {\n        if (functionType === 'identity') {\n            return [new ValidationError(options.key, options.value, 'identity function may not have a \"stops\" property')];\n        }\n        let errors = [];\n        const value = options.value;\n        errors = errors.concat(validateArray({\n            key: options.key,\n            value,\n            valueSpec: options.valueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec,\n            arrayElementValidator: validateFunctionStop\n        }));\n        if (getType(value) === 'array' && value.length === 0) {\n            errors.push(new ValidationError(options.key, value, 'array must have at least one stop'));\n        }\n        return errors;\n    }\n    function validateFunctionStop(options) {\n        let errors = [];\n        const value = options.value;\n        const key = options.key;\n        if (getType(value) !== 'array') {\n            return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n        }\n        if (value.length !== 2) {\n            return [new ValidationError(key, value, `array length 2 expected, length ${value.length} found`)];\n        }\n        if (isZoomAndPropertyFunction) {\n            if (getType(value[0]) !== 'object') {\n                return [new ValidationError(key, value, `object expected, ${getType(value[0])} found`)];\n            }\n            if (value[0].zoom === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have zoom')];\n            }\n            if (value[0].value === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have value')];\n            }\n            if (previousStopDomainZoom && previousStopDomainZoom > unbundle(value[0].zoom)) {\n                return [new ValidationError(key, value[0].zoom, 'stop zoom values must appear in ascending order')];\n            }\n            if (unbundle(value[0].zoom) !== previousStopDomainZoom) {\n                previousStopDomainZoom = unbundle(value[0].zoom);\n                previousStopDomainValue = undefined;\n                stopDomainValues = {};\n            }\n            errors = errors.concat(validateObject({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: { zoom: {} },\n                style: options.style,\n                styleSpec: options.styleSpec,\n                objectElementValidators: { zoom: validateNumber, value: validateStopDomainValue }\n            }));\n        }\n        else {\n            errors = errors.concat(validateStopDomainValue({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {},\n                style: options.style,\n                styleSpec: options.styleSpec\n            }, value));\n        }\n        if (isExpression(deepUnbundle(value[1]))) {\n            return errors.concat([new ValidationError(`${key}[1]`, value[1], 'expressions are not allowed in function stops.')]);\n        }\n        return errors.concat(validate({\n            key: `${key}[1]`,\n            value: value[1],\n            valueSpec: functionValueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        }));\n    }\n    function validateStopDomainValue(options, stop) {\n        const type = getType(options.value);\n        const value = unbundle(options.value);\n        const reportValue = options.value !== null ? options.value : stop;\n        if (!stopKeyType) {\n            stopKeyType = type;\n        }\n        else if (type !== stopKeyType) {\n            return [new ValidationError(options.key, reportValue, `${type} stop domain type must match previous stop domain type ${stopKeyType}`)];\n        }\n        if (type !== 'number' && type !== 'string' && type !== 'boolean') {\n            return [new ValidationError(options.key, reportValue, 'stop domain value must be a number, string, or boolean')];\n        }\n        if (type !== 'number' && functionType !== 'categorical') {\n            let message = `number expected, ${type} found`;\n            if (supportsPropertyExpression(functionValueSpec) && functionType === undefined) {\n                message += '\\nIf you intended to use a categorical function, specify `\"type\": \"categorical\"`.';\n            }\n            return [new ValidationError(options.key, reportValue, message)];\n        }\n        if (functionType === 'categorical' && type === 'number' && (!isFinite(value) || Math.floor(value) !== value)) {\n            return [new ValidationError(options.key, reportValue, `integer expected, found ${value}`)];\n        }\n        if (functionType !== 'categorical' && type === 'number' && previousStopDomainValue !== undefined && value < previousStopDomainValue) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must appear in ascending order')];\n        }\n        else {\n            previousStopDomainValue = value;\n        }\n        if (functionType === 'categorical' && value in stopDomainValues) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must be unique')];\n        }\n        else {\n            stopDomainValues[value] = true;\n        }\n        return [];\n    }\n    function validateFunctionDefault(options) {\n        return validate({\n            key: options.key,\n            value: options.value,\n            valueSpec: functionValueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        });\n    }\n}\n//# sourceMappingURL=validate_function.js.map","import ValidationError from '../error/validation_error';\nimport { createExpression, createPropertyExpression } from '../expression';\nimport { deepUnbundle } from '../util/unbundle_jsonlint';\nimport { isStateConstant, isGlobalPropertyConstant, isFeatureConstant } from '../expression/is_constant';\nexport default function validateExpression(options) {\n    const expression = (options.expressionContext === 'property' ? createPropertyExpression : createExpression)(deepUnbundle(options.value), options.valueSpec);\n    if (expression.result === 'error') {\n        return expression.value.map((error) => {\n            return new ValidationError(`${options.key}${error.key}`, options.value, error.message);\n        });\n    }\n    const expressionObj = expression.value.expression || expression.value._styleExpression.expression;\n    if (options.expressionContext === 'property' && (options.propertyKey === 'text-font') &&\n        !expressionObj.outputDefined()) {\n        return [new ValidationError(options.key, options.value, `Invalid data expression for \"${options.propertyKey}\". Output values must be contained as literals within the expression.`)];\n    }\n    if (options.expressionContext === 'property' && options.propertyType === 'layout' &&\n        (!isStateConstant(expressionObj))) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with layout properties.')];\n    }\n    if (options.expressionContext === 'filter' && !isStateConstant(expressionObj)) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with filters.')];\n    }\n    if (options.expressionContext && options.expressionContext.indexOf('cluster') === 0) {\n        if (!isGlobalPropertyConstant(expressionObj, ['zoom', 'feature-state'])) {\n            return [new ValidationError(options.key, options.value, '\"zoom\" and \"feature-state\" expressions are not supported with cluster properties.')];\n        }\n        if (options.expressionContext === 'cluster-initial' && !isFeatureConstant(expressionObj)) {\n            return [new ValidationError(options.key, options.value, 'Feature data expressions are not supported with initial expression part of cluster properties.')];\n        }\n    }\n    return [];\n}\n//# sourceMappingURL=validate_expression.js.map","import getType from '../util/get_type';\nimport ValidationError from '../error/validation_error';\nexport default function validateBoolean(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n    if (type !== 'boolean') {\n        return [new ValidationError(key, value, `boolean expected, ${type} found`)];\n    }\n    return [];\n}\n//# sourceMappingURL=validate_boolean.js.map","import ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport { parseCSSColor } from 'csscolorparser';\nexport default function validateColor(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `color expected, ${type} found`)];\n    }\n    if (parseCSSColor(value) === null) {\n        return [new ValidationError(key, value, `color expected, \"${value}\" found`)];\n    }\n    return [];\n}\n//# sourceMappingURL=validate_color.js.map","import ValidationError from '../error/validation_error';\nimport { unbundle } from '../util/unbundle_jsonlint';\nexport default function validateEnum(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const errors = [];\n    if (Array.isArray(valueSpec.values)) { // <=v7\n        if (valueSpec.values.indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${valueSpec.values.join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    else { // >=v8\n        if (Object.keys(valueSpec.values).indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${Object.keys(valueSpec.values).join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    return errors;\n}\n//# sourceMappingURL=validate_enum.js.map","import ValidationError from '../error/validation_error';\nimport validateExpression from './validate_expression';\nimport validateEnum from './validate_enum';\nimport getType from '../util/get_type';\nimport { unbundle, deepUnbundle } from '../util/unbundle_jsonlint';\nimport extend from '../util/extend';\nimport { isExpressionFilter } from '../feature_filter';\nexport default function validateFilter(options) {\n    if (isExpressionFilter(deepUnbundle(options.value))) {\n        return validateExpression(extend({}, options, {\n            expressionContext: 'filter',\n            valueSpec: { value: 'boolean' }\n        }));\n    }\n    else {\n        return validateNonExpressionFilter(options);\n    }\n}\nfunction validateNonExpressionFilter(options) {\n    const value = options.value;\n    const key = options.key;\n    if (getType(value) !== 'array') {\n        return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n    }\n    const styleSpec = options.styleSpec;\n    let type;\n    let errors = [];\n    if (value.length < 1) {\n        return [new ValidationError(key, value, 'filter array must have at least 1 element')];\n    }\n    errors = errors.concat(validateEnum({\n        key: `${key}[0]`,\n        value: value[0],\n        valueSpec: styleSpec.filter_operator,\n        style: options.style,\n        styleSpec: options.styleSpec\n    }));\n    switch (unbundle(value[0])) {\n        case '<':\n        case '<=':\n        case '>':\n        case '>=':\n            if (value.length >= 2 && unbundle(value[1]) === '$type') {\n                errors.push(new ValidationError(key, value, `\"$type\" cannot be use with operator \"${value[0]}\"`));\n            }\n        /* falls through */\n        case '==':\n        case '!=':\n            if (value.length !== 3) {\n                errors.push(new ValidationError(key, value, `filter array for operator \"${value[0]}\" must have 3 elements`));\n            }\n        /* falls through */\n        case 'in':\n        case '!in':\n            if (value.length >= 2) {\n                type = getType(value[1]);\n                if (type !== 'string') {\n                    errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n                }\n            }\n            for (let i = 2; i < value.length; i++) {\n                type = getType(value[i]);\n                if (unbundle(value[1]) === '$type') {\n                    errors = errors.concat(validateEnum({\n                        key: `${key}[${i}]`,\n                        value: value[i],\n                        valueSpec: styleSpec.geometry_type,\n                        style: options.style,\n                        styleSpec: options.styleSpec\n                    }));\n                }\n                else if (type !== 'string' && type !== 'number' && type !== 'boolean') {\n                    errors.push(new ValidationError(`${key}[${i}]`, value[i], `string, number, or boolean expected, ${type} found`));\n                }\n            }\n            break;\n        case 'any':\n        case 'all':\n        case 'none':\n            for (let i = 1; i < value.length; i++) {\n                errors = errors.concat(validateNonExpressionFilter({\n                    key: `${key}[${i}]`,\n                    value: value[i],\n                    style: options.style,\n                    styleSpec: options.styleSpec\n                }));\n            }\n            break;\n        case 'has':\n        case '!has':\n            type = getType(value[1]);\n            if (value.length !== 2) {\n                errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n            }\n            else if (type !== 'string') {\n                errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n            }\n            break;\n        case 'within':\n            type = getType(value[1]);\n            if (value.length !== 2) {\n                errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n            }\n            else if (type !== 'object') {\n                errors.push(new ValidationError(`${key}[1]`, value[1], `object expected, ${type} found`));\n            }\n            break;\n    }\n    return errors;\n}\n//# sourceMappingURL=validate_filter.js.map","import validate from './validate';\nimport ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport { isFunction } from '../function';\nimport { unbundle, deepUnbundle } from '../util/unbundle_jsonlint';\nimport { supportsPropertyExpression } from '../util/properties';\nexport default function validateProperty(options, propertyType) {\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const value = options.value;\n    const propertyKey = options.objectKey;\n    const layerSpec = styleSpec[`${propertyType}_${options.layerType}`];\n    if (!layerSpec)\n        return [];\n    const transitionMatch = propertyKey.match(/^(.*)-transition$/);\n    if (propertyType === 'paint' && transitionMatch && layerSpec[transitionMatch[1]] && layerSpec[transitionMatch[1]].transition) {\n        return validate({\n            key,\n            value,\n            valueSpec: styleSpec.transition,\n            style,\n            styleSpec\n        });\n    }\n    const valueSpec = options.valueSpec || layerSpec[propertyKey];\n    if (!valueSpec) {\n        return [new ValidationError(key, value, `unknown property \"${propertyKey}\"`)];\n    }\n    let tokenMatch;\n    if (getType(value) === 'string' && supportsPropertyExpression(valueSpec) && !valueSpec.tokens && (tokenMatch = /^{([^}]+)}$/.exec(value))) {\n        return [new ValidationError(key, value, `\"${propertyKey}\" does not support interpolation syntax\\n` +\n                `Use an identity property function instead: \\`{ \"type\": \"identity\", \"property\": ${JSON.stringify(tokenMatch[1])} }\\`.`)];\n    }\n    const errors = [];\n    if (options.layerType === 'symbol') {\n        if (propertyKey === 'text-field' && style && !style.glyphs) {\n            errors.push(new ValidationError(key, value, 'use of \"text-field\" requires a style \"glyphs\" property'));\n        }\n        if (propertyKey === 'text-font' && isFunction(deepUnbundle(value)) && unbundle(value.type) === 'identity') {\n            errors.push(new ValidationError(key, value, '\"text-font\" does not support identity functions'));\n        }\n    }\n    return errors.concat(validate({\n        key: options.key,\n        value,\n        valueSpec,\n        style,\n        styleSpec,\n        expressionContext: 'property',\n        propertyType,\n        propertyKey\n    }));\n}\n//# sourceMappingURL=validate_property.js.map","import validateProperty from './validate_property';\nexport default function validatePaintProperty(options) {\n    return validateProperty(options, 'paint');\n}\n//# sourceMappingURL=validate_paint_property.js.map","import validateProperty from './validate_property';\nexport default function validateLayoutProperty(options) {\n    return validateProperty(options, 'layout');\n}\n//# sourceMappingURL=validate_layout_property.js.map","import ValidationError from '../error/validation_error';\nimport { unbundle } from '../util/unbundle_jsonlint';\nimport validateObject from './validate_object';\nimport validateFilter from './validate_filter';\nimport validatePaintProperty from './validate_paint_property';\nimport validateLayoutProperty from './validate_layout_property';\nimport validateSpec from './validate';\nimport extend from '../util/extend';\nexport default function validateLayer(options) {\n    let errors = [];\n    const layer = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    if (!layer.type && !layer.ref) {\n        errors.push(new ValidationError(key, layer, 'either \"type\" or \"ref\" is required'));\n    }\n    let type = unbundle(layer.type);\n    const ref = unbundle(layer.ref);\n    if (layer.id) {\n        const layerId = unbundle(layer.id);\n        for (let i = 0; i < options.arrayIndex; i++) {\n            const otherLayer = style.layers[i];\n            if (unbundle(otherLayer.id) === layerId) {\n                errors.push(new ValidationError(key, layer.id, `duplicate layer id \"${layer.id}\", previously used at line ${otherLayer.id.__line__}`));\n            }\n        }\n    }\n    if ('ref' in layer) {\n        ['type', 'source', 'source-layer', 'filter', 'layout'].forEach((p) => {\n            if (p in layer) {\n                errors.push(new ValidationError(key, layer[p], `\"${p}\" is prohibited for ref layers`));\n            }\n        });\n        let parent;\n        style.layers.forEach((layer) => {\n            if (unbundle(layer.id) === ref)\n                parent = layer;\n        });\n        if (!parent) {\n            errors.push(new ValidationError(key, layer.ref, `ref layer \"${ref}\" not found`));\n        }\n        else if (parent.ref) {\n            errors.push(new ValidationError(key, layer.ref, 'ref cannot reference another ref layer'));\n        }\n        else {\n            type = unbundle(parent.type);\n        }\n    }\n    else if (type !== 'background') {\n        if (!layer.source) {\n            errors.push(new ValidationError(key, layer, 'missing required property \"source\"'));\n        }\n        else {\n            const source = style.sources && style.sources[layer.source];\n            const sourceType = source && unbundle(source.type);\n            if (!source) {\n                errors.push(new ValidationError(key, layer.source, `source \"${layer.source}\" not found`));\n            }\n            else if (sourceType === 'vector' && type === 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster source`));\n            }\n            else if (sourceType === 'raster' && type !== 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a vector source`));\n            }\n            else if (sourceType === 'vector' && !layer['source-layer']) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" must specify a \"source-layer\"`));\n            }\n            else if (sourceType === 'raster-dem' && type !== 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, 'raster-dem source can only be used with layer type \\'hillshade\\'.'));\n            }\n            else if (type === 'line' && layer.paint && layer.paint['line-gradient'] &&\n                (sourceType !== 'geojson' || !source.lineMetrics)) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" specifies a line-gradient, which requires a GeoJSON source with \\`lineMetrics\\` enabled.`));\n            }\n        }\n    }\n    errors = errors.concat(validateObject({\n        key,\n        value: layer,\n        valueSpec: styleSpec.layer,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            '*'() {\n                return [];\n            },\n            // We don't want to enforce the spec's `\"requires\": true` for backward compatibility with refs;\n            // the actual requirement is validated above. See https://github.com/mapbox/mapbox-gl-js/issues/5772.\n            type() {\n                return validateSpec({\n                    key: `${key}.type`,\n                    value: layer.type,\n                    valueSpec: styleSpec.layer.type,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    object: layer,\n                    objectKey: 'type'\n                });\n            },\n            filter: validateFilter,\n            layout(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validateLayoutProperty(extend({ layerType: type }, options));\n                        }\n                    }\n                });\n            },\n            paint(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validatePaintProperty(extend({ layerType: type }, options));\n                        }\n                    }\n                });\n            }\n        }\n    }));\n    return errors;\n}\n//# sourceMappingURL=validate_layer.js.map","import getType from '../util/get_type';\nimport ValidationError from '../error/validation_error';\nexport default function validateString(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `string expected, ${type} found`)];\n    }\n    return [];\n}\n//# sourceMappingURL=validate_string.js.map","import ValidationError from '../error/validation_error';\nimport { unbundle } from '../util/unbundle_jsonlint';\nimport validateObject from './validate_object';\nimport validateEnum from './validate_enum';\nimport validateExpression from './validate_expression';\nimport validateString from './validate_string';\nimport getType from '../util/get_type';\nconst objectElementValidators = {\n    promoteId: validatePromoteId\n};\nexport default function validateSource(options) {\n    const value = options.value;\n    const key = options.key;\n    const styleSpec = options.styleSpec;\n    const style = options.style;\n    if (!value.type) {\n        return [new ValidationError(key, value, '\"type\" is required')];\n    }\n    const type = unbundle(value.type);\n    let errors;\n    switch (type) {\n        case 'vector':\n        case 'raster':\n        case 'raster-dem':\n            errors = validateObject({\n                key,\n                value,\n                valueSpec: styleSpec[`source_${type.replace('-', '_')}`],\n                style: options.style,\n                styleSpec,\n                objectElementValidators\n            });\n            return errors;\n        case 'geojson':\n            errors = validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_geojson,\n                style,\n                styleSpec,\n                objectElementValidators\n            });\n            if (value.cluster) {\n                for (const prop in value.clusterProperties) {\n                    const [operator, mapExpr] = value.clusterProperties[prop];\n                    const reduceExpr = typeof operator === 'string' ? [operator, ['accumulated'], ['get', prop]] : operator;\n                    errors.push(...validateExpression({\n                        key: `${key}.${prop}.map`,\n                        value: mapExpr,\n                        expressionContext: 'cluster-map'\n                    }));\n                    errors.push(...validateExpression({\n                        key: `${key}.${prop}.reduce`,\n                        value: reduceExpr,\n                        expressionContext: 'cluster-reduce'\n                    }));\n                }\n            }\n            return errors;\n        case 'video':\n            return validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_video,\n                style,\n                styleSpec\n            });\n        case 'image':\n            return validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_image,\n                style,\n                styleSpec\n            });\n        case 'canvas':\n            return [new ValidationError(key, null, 'Please use runtime APIs to add canvas sources, rather than including them in stylesheets.', 'source.canvas')];\n        default:\n            return validateEnum({\n                key: `${key}.type`,\n                value: value.type,\n                valueSpec: { values: ['vector', 'raster', 'raster-dem', 'geojson', 'video', 'image'] },\n                style,\n                styleSpec\n            });\n    }\n}\nfunction validatePromoteId({ key, value }) {\n    if (getType(value) === 'string') {\n        return validateString({ key, value });\n    }\n    else {\n        const errors = [];\n        for (const prop in value) {\n            errors.push(...validateString({ key: `${key}.${prop}`, value: value[prop] }));\n        }\n        return errors;\n    }\n}\n//# sourceMappingURL=validate_source.js.map","import ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport validate from './validate';\nexport default function validateLight(options) {\n    const light = options.value;\n    const styleSpec = options.styleSpec;\n    const lightSpec = styleSpec.light;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(light);\n    if (light === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('light', light, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n    for (const key in light) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n        if (transitionMatch && lightSpec[transitionMatch[1]] && lightSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(validate({\n                key,\n                value: light[key],\n                valueSpec: styleSpec.transition,\n                style,\n                styleSpec\n            }));\n        }\n        else if (lightSpec[key]) {\n            errors = errors.concat(validate({\n                key,\n                value: light[key],\n                valueSpec: lightSpec[key],\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, light[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n//# sourceMappingURL=validate_light.js.map","import validateExpression from './validate_expression';\nimport validateString from './validate_string';\nexport default function validateFormatted(options) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n    return validateExpression(options);\n}\n//# sourceMappingURL=validate_formatted.js.map","import validateExpression from './validate_expression';\nimport validateString from './validate_string';\nexport default function validateImage(options) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n    return validateExpression(options);\n}\n//# sourceMappingURL=validate_image.js.map","import extend from '../util/extend';\nimport { unbundle, deepUnbundle } from '../util/unbundle_jsonlint';\nimport { isExpression } from '../expression';\nimport { isFunction } from '../function';\nimport validateFunction from './validate_function';\nimport validateExpression from './validate_expression';\nimport validateObject from './validate_object';\nimport validateArray from './validate_array';\nimport validateBoolean from './validate_boolean';\nimport validateNumber from './validate_number';\nimport validateColor from './validate_color';\nimport validateConstants from './validate_constants';\nimport validateEnum from './validate_enum';\nimport validateFilter from './validate_filter';\nimport validateLayer from './validate_layer';\nimport validateSource from './validate_source';\nimport validateLight from './validate_light';\nimport validateString from './validate_string';\nimport validateFormatted from './validate_formatted';\nimport validateImage from './validate_image';\nconst VALIDATORS = {\n    '*'() {\n        return [];\n    },\n    'array': validateArray,\n    'boolean': validateBoolean,\n    'number': validateNumber,\n    'color': validateColor,\n    'constants': validateConstants,\n    'enum': validateEnum,\n    'filter': validateFilter,\n    'function': validateFunction,\n    'layer': validateLayer,\n    'object': validateObject,\n    'source': validateSource,\n    'light': validateLight,\n    'string': validateString,\n    'formatted': validateFormatted,\n    'resolvedImage': validateImage\n};\n// Main recursive validation function. Tracks:\n//\n// - key: string representing location of validation in style tree. Used only\n//   for more informative error reporting.\n// - value: current value from style being evaluated. May be anything from a\n//   high level object that needs to be descended into deeper or a simple\n//   scalar value.\n// - valueSpec: current spec being evaluated. Tracks value.\n// - styleSpec: current full spec being evaluated.\nexport default function validate(options) {\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const styleSpec = options.styleSpec;\n    if (valueSpec.expression && isFunction(unbundle(value))) {\n        return validateFunction(options);\n    }\n    else if (valueSpec.expression && isExpression(deepUnbundle(value))) {\n        return validateExpression(options);\n    }\n    else if (valueSpec.type && VALIDATORS[valueSpec.type]) {\n        return VALIDATORS[valueSpec.type](options);\n    }\n    else {\n        const valid = validateObject(extend({}, options, {\n            valueSpec: valueSpec.type ? styleSpec[valueSpec.type] : valueSpec\n        }));\n        return valid;\n    }\n}\n//# sourceMappingURL=validate.js.map","import ValidationError from '../error/validation_error';\nimport validateString from './validate_string';\nexport default function (options) {\n    const value = options.value;\n    const key = options.key;\n    const errors = validateString(options);\n    if (errors.length)\n        return errors;\n    if (value.indexOf('{fontstack}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{fontstack}\" token'));\n    }\n    if (value.indexOf('{range}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{range}\" token'));\n    }\n    return errors;\n}\n//# sourceMappingURL=validate_glyphs_url.js.map","import validateConstants from './validate/validate_constants';\nimport validate from './validate/validate';\nimport latestStyleSpec from './reference/latest';\nimport validateGlyphsURL from './validate/validate_glyphs_url';\nimport validateSource from './validate/validate_source';\nimport validateLight from './validate/validate_light';\nimport validateLayer from './validate/validate_layer';\nimport validateFilter from './validate/validate_filter';\nimport validatePaintProperty from './validate/validate_paint_property';\nimport validateLayoutProperty from './validate/validate_layout_property';\n/**\n * Validate a Mapbox GL style against the style specification. This entrypoint,\n * `maplibre-gl-style-spec/lib/validate_style.min`, is designed to produce as\n * small a browserify bundle as possible by omitting unnecessary functionality\n * and legacy style specifications.\n *\n * @private\n * @param {Object} style The style to be validated.\n * @param {Object} [styleSpec] The style specification to validate against.\n *     If omitted, the latest style spec is used.\n * @returns {Array<ValidationError>}\n * @example\n *   var validate = require('maplibre-gl-style-spec/lib/validate_style.min');\n *   var errors = validate(style);\n */\nfunction validateStyleMin(style, styleSpec = latestStyleSpec) {\n    let errors = [];\n    errors = errors.concat(validate({\n        key: '',\n        value: style,\n        valueSpec: styleSpec.$root,\n        styleSpec,\n        style,\n        objectElementValidators: {\n            glyphs: validateGlyphsURL,\n            '*'() {\n                return [];\n            }\n        }\n    }));\n    if (style.constants) {\n        errors = errors.concat(validateConstants({\n            key: 'constants',\n            value: style.constants,\n            style,\n            styleSpec\n        }));\n    }\n    return sortErrors(errors);\n}\nvalidateStyleMin.source = wrapCleanErrors(validateSource);\nvalidateStyleMin.light = wrapCleanErrors(validateLight);\nvalidateStyleMin.layer = wrapCleanErrors(validateLayer);\nvalidateStyleMin.filter = wrapCleanErrors(validateFilter);\nvalidateStyleMin.paintProperty = wrapCleanErrors(validatePaintProperty);\nvalidateStyleMin.layoutProperty = wrapCleanErrors(validateLayoutProperty);\nfunction sortErrors(errors) {\n    return [].concat(errors).sort((a, b) => {\n        return a.line - b.line;\n    });\n}\nfunction wrapCleanErrors(inner) {\n    return function (...args) {\n        return sortErrors(inner.apply(this, args));\n    };\n}\nexport default validateStyleMin;\n//# sourceMappingURL=validate_style.min.js.map","/* parser generated by jison 0.4.15 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,12],$V1=[1,13],$V2=[1,9],$V3=[1,10],$V4=[1,11],$V5=[1,14],$V6=[1,15],$V7=[14,18,22,24],$V8=[18,22],$V9=[22,24];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"JSONString\":3,\"STRING\":4,\"JSONNumber\":5,\"NUMBER\":6,\"JSONNullLiteral\":7,\"NULL\":8,\"JSONBooleanLiteral\":9,\"TRUE\":10,\"FALSE\":11,\"JSONText\":12,\"JSONValue\":13,\"EOF\":14,\"JSONObject\":15,\"JSONArray\":16,\"{\":17,\"}\":18,\"JSONMemberList\":19,\"JSONMember\":20,\":\":21,\",\":22,\"[\":23,\"]\":24,\"JSONElementList\":25,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"STRING\",6:\"NUMBER\",8:\"NULL\",10:\"TRUE\",11:\"FALSE\",14:\"EOF\",17:\"{\",18:\"}\",21:\":\",22:\",\",23:\"[\",24:\"]\"},\nproductions_: [0,[3,1],[5,1],[7,1],[9,1],[9,1],[12,2],[13,1],[13,1],[13,1],[13,1],[13,1],[13,1],[15,2],[15,3],[20,3],[19,1],[19,3],[16,2],[16,3],[25,1],[25,3]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n // replace escaped characters with actual character\n          this.$ = new String(yytext.replace(/\\\\(\\\\|\")/g, \"$\"+\"1\")\n                     .replace(/\\\\n/g,'\\n')\n                     .replace(/\\\\r/g,'\\r')\n                     .replace(/\\\\t/g,'\\t')\n                     .replace(/\\\\v/g,'\\v')\n                     .replace(/\\\\f/g,'\\f')\n                     .replace(/\\\\b/g,'\\b'));\n          this.$.__line__ =  this._$.first_line;\n        \nbreak;\ncase 2:\n\n            this.$ = new Number(yytext);\n            this.$.__line__ =  this._$.first_line;\n        \nbreak;\ncase 3:\n\n            this.$ = null;\n        \nbreak;\ncase 4:\n\n            this.$ = new Boolean(true);\n            this.$.__line__ = this._$.first_line;\n        \nbreak;\ncase 5:\n\n            this.$ = new Boolean(false);\n            this.$.__line__ = this._$.first_line;\n        \nbreak;\ncase 6:\nreturn this.$ = $$[$0-1];\nbreak;\ncase 13:\nthis.$ = {}; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 14: case 19:\nthis.$ = $$[$0-1]; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 15:\nthis.$ = [$$[$0-2], $$[$0]];\nbreak;\ncase 16:\nthis.$ = {}; this.$[$$[$0][0]] = $$[$0][1];\nbreak;\ncase 17:\nthis.$ = $$[$0-2]; $$[$0-2][$$[$0][0]] = $$[$0][1];\nbreak;\ncase 18:\nthis.$ = []; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 20:\nthis.$ = [$$[$0]];\nbreak;\ncase 21:\nthis.$ = $$[$0-2]; $$[$0-2].push($$[$0]);\nbreak;\n}\n},\ntable: [{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,12:1,13:2,15:7,16:8,17:$V5,23:$V6},{1:[3]},{14:[1,16]},o($V7,[2,7]),o($V7,[2,8]),o($V7,[2,9]),o($V7,[2,10]),o($V7,[2,11]),o($V7,[2,12]),o($V7,[2,3]),o($V7,[2,4]),o($V7,[2,5]),o([14,18,21,22,24],[2,1]),o($V7,[2,2]),{3:20,4:$V0,18:[1,17],19:18,20:19},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:23,15:7,16:8,17:$V5,23:$V6,24:[1,21],25:22},{1:[2,6]},o($V7,[2,13]),{18:[1,24],22:[1,25]},o($V8,[2,16]),{21:[1,26]},o($V7,[2,18]),{22:[1,28],24:[1,27]},o($V9,[2,20]),o($V7,[2,14]),{3:20,4:$V0,20:29},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:30,15:7,16:8,17:$V5,23:$V6},o($V7,[2,19]),{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:31,15:7,16:8,17:$V5,23:$V6},o($V8,[2,17]),o($V8,[2,15]),o($V9,[2,21])],\ndefaultActions: {16:[2,6]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        throw new Error(str);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        function lex() {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:return 6\nbreak;\ncase 2:yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 4\nbreak;\ncase 3:return 17\nbreak;\ncase 4:return 18\nbreak;\ncase 5:return 23\nbreak;\ncase 6:return 24\nbreak;\ncase 7:return 22\nbreak;\ncase 8:return 21\nbreak;\ncase 9:return 10\nbreak;\ncase 10:return 11\nbreak;\ncase 11:return 8\nbreak;\ncase 12:return 14\nbreak;\ncase 13:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:(-?([0-9]|[1-9][0-9]+))(\\.[0-9]+)?([eE][-+]?[0-9]+)?\\b)/,/^(?:\"(?:\\\\[\\\\\"bfnrt/]|\\\\u[a-fA-F0-9]{4}|[^\\\\\\0-\\x09\\x0a-\\x1f\"])*\")/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\[)/,/^(?:\\])/,/^(?:,)/,/^(?::)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:null\\b)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\n}\n","import ParsingError from './error/parsing_error';\nimport jsonlint from '@mapbox/jsonlint-lines-primitives';\nexport default function readStyle(style) {\n    if (style instanceof String || typeof style === 'string' || style instanceof Buffer) {\n        try {\n            return jsonlint.parse(style.toString());\n        }\n        catch (e) {\n            throw new ParsingError(e);\n        }\n    }\n    return style;\n}\n//# sourceMappingURL=read_style.js.map","import validateStyleMin from './validate_style.min';\nimport { v8 } from './style-spec';\nimport readStyle from './read_style';\n/**\n * Validate a Mapbox GL style against the style specification.\n *\n * @private\n * @alias validate\n * @param {Object|String|Buffer} style The style to be validated. If a `String`\n *     or `Buffer` is provided, the returned errors will contain line numbers.\n * @param {Object} [styleSpec] The style specification to validate against.\n *     If omitted, the spec version is inferred from the stylesheet.\n * @returns {Array<ValidationError|ParsingError>}\n * @example\n *   var validate = require('maplibre-gl-style-spec').validate;\n *   var style = fs.readFileSync('./style.json', 'utf8');\n *   var errors = validate(style);\n */\nexport default function validateStyle(style, styleSpec = v8) {\n    let s = style;\n    try {\n        s = readStyle(s);\n    }\n    catch (e) {\n        return [e];\n    }\n    return validateStyleMin(s, styleSpec);\n}\nexport const source = validateStyleMin.source;\nexport const light = validateStyleMin.light;\nexport const layer = validateStyleMin.layer;\nexport const filter = validateStyleMin.filter;\nexport const paintProperty = validateStyleMin.paintProperty;\nexport const layoutProperty = validateStyleMin.layoutProperty;\n//# sourceMappingURL=validate_style.js.map","import v8 from './reference/v8.json';\nimport latest from './reference/latest';\nimport format from './format';\nimport migrate from './migrate';\nimport composite from './composite';\nimport derefLayers from './deref';\nimport diff from './diff';\nimport ValidationError from './error/validation_error';\nimport ParsingError from './error/parsing_error';\nimport { StyleExpression, isExpression, createExpression, createPropertyExpression, normalizePropertyExpression, ZoomConstantExpression, ZoomDependentExpression, StylePropertyFunction } from './expression';\nimport featureFilter, { isExpressionFilter } from './feature_filter';\nimport convertFilter from './feature_filter/convert';\nimport Color from './util/color';\nimport { createFunction, isFunction } from './function';\nimport convertFunction from './function/convert';\nimport { eachSource, eachLayer, eachProperty } from './visit';\nimport validate from './validate_style';\nconst expression = {\n    StyleExpression,\n    isExpression,\n    isExpressionFilter,\n    createExpression,\n    createPropertyExpression,\n    normalizePropertyExpression,\n    ZoomConstantExpression,\n    ZoomDependentExpression,\n    StylePropertyFunction\n};\nconst styleFunction = {\n    convertFunction,\n    createFunction,\n    isFunction\n};\nconst visit = { eachSource, eachLayer, eachProperty };\nexport { v8, latest, format, migrate, composite, derefLayers, diff, ValidationError, ParsingError, expression, featureFilter, convertFilter, Color, styleFunction as function, validate, visit };\nvalidate.parsed = validate;\nvalidate.latest = validate;\n//# sourceMappingURL=style-spec.js.map"],"names":["stringOrChar","module","stringify","passedObj","options","indent","maxLength","replacer","JSON","undefined","slice","Infinity","_stringify","obj","currentIndent","reserved","end","index","items","key","keyPart","keys","length","nextIndent","prettified","start","string","value","toJSON","replace","match","stringLiteral","parse","Array","isArray","push","Object","join","sortKeysBy","reference","result","format","style","space","$root","layers","map","layer","stringifyPretty","root","freeExports","exports","nodeType","freeModule","freeGlobal","global","window","self","punycode","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","Math","stringFromCharCode","String","fromCharCode","error","type","RangeError","array","fn","mapDomain","parts","split","labels","encoded","ucs2decode","output","counter","extra","charCodeAt","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","decode","input","inputLength","out","i","n","bias","basic","j","oldi","w","t","baseMinusT","lastIndexOf","splice","encode","handledCPCount","basicLength","m","q","currentValue","handledCPCountPlusOne","qMinusT","toUnicode","test","toLowerCase","toASCII","hasOwnProperty","this","isString","arg","isObject","isNull","isNullOrUndefined","prop","prototype","call","qs","sep","eq","regexp","maxKeys","len","x","idx","indexOf","kstr","vstr","v","substr","decodeURIComponent","stringifyPrimitive","isFinite","name","ks","encodeURIComponent","require","util","urlParse","urlResolve","urlResolveObject","urlFormat","Url","protocol","slashes","auth","host","port","hostname","hash","search","query","pathname","path","href","protocolPattern","portPattern","simplePathPattern","delims","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","querystring","url","parseQueryString","slashesDenoteHost","u","TypeError","queryIndex","splitter","uSplit","slashRegex","rest","trim","simplePath","exec","proto","lowerProto","hostEnd","hec","atSign","parseHost","ipv6Hostname","hostparts","l","part","newpart","validParts","notHost","bit","unshift","p","h","ae","esc","escape","qm","s","charAt","source","relative","resolve","resolveObject","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","shift","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","authInHost","last","hasTrailingSlash","up","isAbsolute","getPropertyReference","propertyName","Reference","layout","paint","eachSource","callback","sources","eachLayer","eachProperty","inner","propertyType","properties","forEach","id","set","eachLayout","eachPaint","resolveConstant","constants","isFunction","stops","renameProperty","from","to","version","coordinates","coord","reverse","property","stop","migrateFontstackURL","inputParsed","URL","inputPathnameParts","glyphs","migrateFontStack","font","splitAndTrim","Error","firstSymbolLayer","symbolLayers","inputs","ParsingError","constructor","message","Scope","parent","bindings","expression","get","has","NullType","kind","NumberType","StringType","BooleanType","ColorType","ObjectType","ValueType","ErrorType","CollatorType","FormattedType","ResolvedImageType","itemType","N","toString","valueMemberTypes","checkSubtype","expected","memberType","isValidType","provided","allowedTypes","some","isValidNativeType","kCSSColorTable","clamp_css_byte","round","clamp_css_float","f","parse_css_int","str","parseFloat","parseInt","parse_css_float","css_hue_to_rgb","m1","m2","parseCSSColor","css_str","iv","op","ep","fname","params","alpha","e","Color","r","g","b","a","rgba","toArray","black","white","transparent","red","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","compare","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","text","image","scale","fontStack","textColor","Formatted","sections","fromString","unformatted","isEmpty","section","factory","serialize","serialized","ResolvedImage","available","validateRGBA","isValue","mixed","item","typeOf","Literal","args","context","expectedType","evaluate","eachChild","outputDefined","RuntimeError","types","number","boolean","object","Assertion","parsed","ctx","every","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluateSection","evaluatedContent","ImageExpression","evaluatedImageName","availableImages","Coercion","Boolean","c","parseColor","num","Number","isNaN","valueToString","child","geometryTypes","EvaluationContext","globals","feature","featureState","formattedSection","_parseColorCache","canonical","geometryType","geometry","canonicalID","cached","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","filter","signature","signatureContext","ParsingContext","registry","scope","parsedArgs","argParseFailed","signatures","stringifySignature","actualTypes","register","CollatorExpression","EXTENT","updateBBox","bbox","min","max","mercatorXfromLng","lng","mercatorYfromLat","lat","PI","log","tan","boxWithinBox","bbox1","bbox2","getTileCoordinates","y","tilesAtZoom","pow","z","onBoundary","p1","p2","x1","y1","x2","y2","rayIntersect","pointWithinPolygon","point","rings","inside","ring","len2","pointWithinPolygons","polygons","perp","v1","v2","twoSided","q1","q2","x3","y3","det1","det2","lineIntersectLine","d","vectorP","vectorQ","lineIntersectPolygon","polygon","lineStringWithinPolygon","line","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","resetBBox","getTilePoints","pointBBox","shifts","tilePoints","points","getTileLines","lineBBox","tileLines","tileLine","pointsWithinPolygons","polygonGeometry","tilePolygon","tilePolygons","linesWithinPolygons","Within","geojson","geometries","features","isFeatureConstant","isStateConstant","isGlobalPropertyConstant","Var","boundExpression","expr","_parse","annotate","typeAnnotation","Expr","actual","isConstant","ec","isTypeAnnotation","childrenConstant","findStopLessThanOrEqualTo","lastIndex","lowerIndex","upperIndex","currentIndex","nextValue","Step","outputs","label","outputType","labelKey","valueKey","stopCount","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","abs","d2","t0","t1","solve","color","Xn","Yn","Zn","t2","t3","deg2rad","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateLab","interpolateNumber","rgbToHcl","atan2","sqrt","hclToRgb","hclColor","cos","sin","interpolateHue","interpolateHcl","lab","forward","interpolate","hcl","Interpolate","operator","interpolation","interpolationFactor","lower","upper","exponentialInterpolation","controlPoints","ub","outputLower","outputUpper","lowerValue","upperValue","difference","progress","Coalesce","needsAnnotation","argCount","requestedImageName","Let","binding","At","In","needle","haystack","IndexOf","fromIndex","Match","inputType","cases","otherwise","labelContext","MAX_SAFE_INTEGER","sortedLabels","sort","groupedByOutput","outputLookup","outputIndex","coerceLabel","Case","branches","_","Slice","beginIndex","endIndex","isComparableType","neq","lt","gt","lteq","gteq","eqCollate","neqCollate","ltCollate","gtCollate","lteqCollate","gteqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","rt","Equals","NotEquals","LessThan","GreaterThan","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","binarySearch","varargs","typeToString","zoom","heatmapDensity","lineProgress","accumulated","LN2","E","LN10","asin","acos","atan","ceil","isSupportedScript","toUpperCase","success","supportsPropertyExpression","spec","supportsZoomExpression","parameters","supportsInterpolation","interpolated","getType","val","identityFunction","createFunction","propertySpec","isColor","zoomAndFeatureDependent","featureDependent","zoomDependent","extend","default","colorSpace","colorSpaces","innerFun","hashedStops","categoricalKeyType","evaluateExponentialFunction","evaluateIntervalFunction","evaluateCategoricalFunction","create","evaluateIdentityFunction","featureFunctions","zoomStops","featureFunctionStops","interpolationType","bind","coalesce","keyType","evaluated","interp","colorspace","evaluatedLower","apply","evaluatedUpper","values","StyleExpression","_warningHistory","_evaluator","_defaultValue","getDefaultValue","_enumValues","evaluateWithoutErrorHandling","console","warn","isExpression","createExpression","parser","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","createPropertyExpression","expressionInput","isZoomConstant","zoomCurve","findZoomCurve","StylePropertyFunction","specification","_parameters","_specification","deserialize","normalizePropertyExpression","err","constant","childResult","enum","formatted","resolvedImage","convertLiteral","convertFunction","convertIdentityFunction","tokens","convertTokenString","convertZoomAndPropertyFunction","convertZoomFunction","convertPropertyFunction","getInterpolateOperator","featureFunctionParameters","functionType","getFunctionType","appendStopPair","fixupDegenerateStepCurve","getFallback","defaultValue","isStep","curve","re","pos","literal","isExpressionFilter","filterSpec","createFilter","needGeometry","convertFilter","compiled","geometryNeeded","globalProperties","converted","convertComparisonOp","convertNegation","convertDisjunctionOp","convertInOp","convertHasOp","filters","_convertFilter","expectedTypes","children","typechecks","runtimeTypeChecks","conditions","negate","uniformTypes","uniqueValues","migrated","migrateToV8","migrateToExpressions","styleIDs","sourceIDs","compositedSourceLayers","compositeID","deref","refProperties","derefLayers","ref","deepEqual","operations","setStyle","addLayer","removeLayer","setPaintProperty","setLayoutProperty","setFilter","addSource","removeSource","setGeoJSONSourceData","setLayerZoomRange","setLayerProperty","setCenter","setZoom","setBearing","setPitch","setSprite","setGlyphs","setTransition","setLight","sourceId","after","commands","command","sourcesRemoved","updateSource","canUpdateGeoJSON","before","isEqual","diffSources","data","diffLayerPropertyChanges","layerId","klass","pluckId","indexById","group","diffLayers","beforeOrder","afterOrder","beforeIndex","reduce","afterIndex","tracker","clean","beforeLayer","afterLayer","insertBeforeLayerId","minzoom","maxzoom","diffStyles","center","bearing","pitch","sprite","transition","light","removeOrAddSourceCommands","beforeLayers","ValidationError","identifier","__line__","validateConstants","unbundle","valueOf","deepUnbundle","unbundledValue","validateObject","elementSpecs","valueSpec","elementValidators","objectElementValidators","styleSpec","objectKey","elementSpecKey","elementSpec","validateElement","validateSpec","required","validateArray","arraySpec","validateArrayElement","arrayElementValidator","validate","arrayElementSpec","$version","function","arrayIndex","validateNumber","minimum","maximum","validateFunction","functionValueSpec","stopKeyType","stopDomainValues","previousStopDomainValue","previousStopDomainZoom","isZoomFunction","isPropertyFunction","isZoomAndPropertyFunction","validateFunctionStops","validateFunctionDefault","validateFunctionStop","validateStopDomainValue","reportValue","validateExpression","expressionContext","expressionObj","propertyKey","validateBoolean","validateColor","validateEnum","validateFilter","validateNonExpressionFilter","filter_operator","geometry_type","validateProperty","layerSpec","layerType","transitionMatch","tokenMatch","validatePaintProperty","validateLayoutProperty","validateLayer","otherLayer","sourceType","lineMetrics","validateString","promoteId","validatePromoteId","validateSource","source_geojson","cluster","clusterProperties","mapExpr","reduceExpr","source_video","source_image","validateLight","lightSpec","rootType","validateFormatted","validateImage","VALIDATORS","valid","validateStyleMin","latestStyleSpec","validateGlyphsURL","sortErrors","wrapCleanErrors","paintProperty","layoutProperty","o","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","trace","yy","symbols_","terminals_","productions_","performAction","anonymous","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","first_line","defineProperty","enumerable","table","defaultActions","parseError","recoverable","stack","vstack","lstack","TERROR","EOF","arguments","lexer","sharedState","setInput","yylloc","yyloc","ranges","getPrototypeOf","lex","token","symbol","state","action","yyval","newState","errStr","showPosition","loc","last_line","first_column","last_column","range","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","lines","unput","oldLines","more","reject","backtrack_lexer","less","pastInput","past","upcomingInput","next","pre","test_match","indexed_rule","backup","matches","tempMatch","rules","_currentRules","flex","begin","condition","popState","topState","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","readStyle","Buffer","jsonlint","validateStyle","v8","styleFunction","visit","latest"],"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"}